{"version":3,"sources":["components/modal-overlay/modal-overlay.module.css","components/ingredient-item-constructor/ingredient-item-constructor.module.css","components/preloader/preloader.module.css","components/orders-counter/order-counter.module.css","pages/not-found/not-found.module.css","components/app-header/app-header.module.css","components/ingredient-details/ingredient-details.module.css","components/burger-ingredients/burger-ingredients.module.css","constants/constants.ts","redux/hooks.ts","components/app-header/app-header.tsx","components/ingredient-item/ingredient-item.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","redux/actions/wsActions.ts","images/done.png","components/order-details/order-details.tsx","utils/js-utils.ts","components/ingredient-item-constructor/ingredient-item-constructor.tsx","redux/actions/makingOrder.ts","redux/actions/orderConstructor.ts","components/preloader/preloader.tsx","components/burger-constructor/burger-constructor.tsx","pages/main/main.tsx","redux/actions/auth.ts","pages/login/login.tsx","pages/register/register.tsx","redux/actions/forgotPassword.ts","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/profile-user-block/profile-user-block.tsx","components/ingredient-logo/ingredient-logo.tsx","components/order-panel/order-panel.tsx","components/order-history/order-history.tsx","pages/profile/profile.tsx","components/order-ready-status/order-ready-status.tsx","components/orders-counter/orders-counter.tsx","pages/feed/feed.tsx","components/protected-route/protected-route.tsx","redux/actions/ingredients.ts","components/ingredient-details/ingredient-details.tsx","pages/not-found/not-found.tsx","components/order-ingredient-info/order-ingredient-info.tsx","components/order-information/order-information.tsx","components/app/app.tsx","redux/reducers/ingredients.ts","redux/reducers/orderConstructor.ts","redux/reducers/makingOrder.ts","redux/reducers/forgotPassword.ts","redux/reducers/auth.ts","redux/reducers/wsReducer.ts","redux/reducers/index.tsx","redux/middleware/socketMiddleware.ts","redux/store.ts","index.tsx","pages/profile/profile.module.css","components/ingredient-item/ingredient-item.module.css","components/burger-constructor/burger-constructor.module.css","pages/login/login.module.css","components/order-panel/order-panel.module.css","components/order-ready-status/order-ready-status.module.css","components/order-information/order-information.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/ingredient-logo/ingredient-logo.module.css","components/order-ingredient-info/order-ingredient-info.module.css","components/order-details/order-details.module.css","components/modal/modal.module.css","pages/main/main.module.css","components/profile-user-block/profile-user-block.module.css","components/order-history/order-history.module.css","pages/feed/feed.module.css"],"names":["module","exports","OrdersCounterTypes","useSelector","selectorHook","useDispatch","dispatchHook","leftMenu","title","url","icon","type","rightMenu","AppHeader","className","styles","header","header_container","navigation","menu_list","left_menu","header_element","map","item","index","exact","to","pathname","menu_list_item","activeStyle","color","right_menu","tab_items","DND_TYPES","PROFILE_PAGE_TYPES","IngredientItem","ingredient","id","_id","useDrag","collect","monitor","isDrag","isDragging","dragRef","store","order","currentOrderBun","currentOrderIngredients","counter","useMemo","filter","length","location","useLocation","state","background","link","ref","ingredient_item","image","src","alt","name","price","price_text","name_text","count","size","BurgerIngredients","useState","currentTab","setCurrentTab","allIngredients","ingredients","tabsRef","useRef","bunsRef","sauceRef","mainRef","distanseCalc","target","current","Math","abs","getBoundingClientRect","y","section_container","tab_block","value","active","onClick","scrollIntoView","behavior","changeTab","ingredients_wrapper","onScroll","bunsDistance","sauceDistance","mainDistance","minDistanse","min","ingredient_type","ingredients_block","ModalOverlay","modal","modalRoot","document","getElementById","createElement","setAttribute","Sockets","Modal","children","closeByEscape","e","key","useEffect","addEventListener","removeEventListener","ReactDOM","createPortal","modal_content","close_icon","OrderDetails","orderNumber","makingOrder","content_block","order_number","DONE_IMAGE","grey_text","checkResponse","res","ok","json","then","result","message","Promise","reject","dateConverter","date","Date","toLocaleString","year","month","day","hour","minute","timeZoneName","ingredientPanelIndex","priceCounter","ingretients","reduce","sum","find","IngredientItemConstructor","deleteIngredient","moveCard","useDrop","accept","handlerId","getHandlerId","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","drop","opacity","drag","element_block","style","text","thumbnail","handleClose","GET_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_FAILED","GET_ORDER_NUMBER_SUCCESS","CLEAR_ORDER_NUMBER","ADD_INGREDIENT_INTO_ORDER","DELETE_INGREDIENT_FROM_ORDER","UPDATE_ORDER_AFTER_DROP","CLEAR_ORDER","Preloader","wrapper","height","width","BurgetConstructor","history","useHistory","dispatch","getOrderRequest","user","auth","setActive","ingObj","ing","ingType","data","random","toString","substr","isOver","dropTarget","totalPrice","ingId","dragCard","newOrderIngredients","splice","section_border","isLocked","total","total_price","total_price_number","currentIngredientsIds","currentBurgerIngredients","a","fetch","BASE_URL","headers","localStorage","getItem","method","body","JSON","stringify","response","replace","MainPage","main_container","DndProvider","backend","HTML5Backend","REGISTRATION_REQUEST","REGISTRATION_ERROR","REGISTRATION_SUCCESS","AUTH_REQUEST","AUTH_ERROR","AUTH_SUCCESS","REFRESH_TOKEN_REQUEST","REFRESH_TOKEN_ERROR","REFRESH_TOKEN_SUCCESS","refreshToken","nextAction","token","success","setItem","accessToken","split","catch","err","logout","console","error","GET_USER_REQUEST","GET_USER_ERROR","GET_USER_SUCCESS","getUser","PATCH_USER_REQUEST","PATCH_USER_ERROR","PATCH_USER_SUCCESS","IS_DATA_USER_UPDATED","patchUser","email","password","LOGOUT_REQUEST","LOGOUT_ERROR","LOGOUT_SUCCESS","removeItem","LoginPage","setPassword","setEmail","from","login_container","onSubmit","preventDefault","fetchAuthorization","form_block","onChange","bottom_info","RegisterPage","setName","fetchRegistration","placeholder","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_ERROR","FORGOT_PASSWORD_SUCCESS","RESET_PASSWORD_REQUEST","RESET_PASSWORD_ERROR","RESET_PASSWORD_SUCCESS","ForgotPasswordPage","forgotPasswordStatus","forgotPassword","fetchForgotPasswort","ResetPasswordPage","resetPasswordStatus","recoveryStage","newPassword","setNewPassword","mailCode","setMailCode","code","fetchResetPassword","UserBlock","isUserDataUpdated","userData","setUserData","isBtnShown","setIsBtnShown","isErrorShown","setIsErrorShown","handleChange","setTimeout","error_info","ok_message_info","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","IngredientLogo","isShifted","restNumber","ingredientInfo","shiftStyle","left","zIndex","image_block","image_block_position_absolute","ingredient_image","rest_number","OrderPanel","wsType","number","createdAt","AllOrders","UserOrders","order_block","number_date_block","bottom_block","price_block","OrderHistory","messages","ws","connection","orders_container","ProfilePage","profile_container","nav_container","profile_nav_link","activeClassName","profile_nav_active_link","OrderReadyStatus","readyOrdersNumber","status","progressOrdersNumber","container","orders_status_block_wrapper","orders_status_block","OrdersCounter","FeedPage","totalToday","content_container","ProtectedRoute","rest","isLoading","render","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_FAILED","GET_INGREDIENTS_SUCCESS","SET_INGREDIENT_MODAL_DATA","DELETE_INGREDIENT_MODAL_DATA","IngredientDetails","currentViewIngredient","match","useRouteMatch","ingredientId","params","ingredient_container","ingredient_single_container","single_heading","image_large","ingredient_name","info","info_block","calories","proteins","fat","carbohydrates","NotFoundPage","error_text","OrderIngredientInfo","currentOrder","setCurrentOrder","arr","i","includes","push","uniqueArray","countIng","ingredient_wrapper","name_block","OrderInformation","orderId","single_container","number_block","App","ingredientsData","ModalSwitch","handleModalClose","goBack","path","initialState","ingRequest","ingError","getOrderFailed","forgotPasswordRequest","forgotPasswordError","resetPasswordRequest","resetPasswordError","registrationRequest","registrationError","authRequest","authError","refreshTokenRequest","refreshTokenError","getUserRequest","getUserError","patchUserRequest","patchUserError","logoutRequest","logoutError","isConnected","isFailed","isFirstLoading","rootReducer","combineReducers","action","el","log","payload","orders","socketMiddleware","wsActions","next","wsInit","onOpen","onClose","onMessage","onError","WS_URL","WebSocket","close","onopen","onclose","onmessage","event","parsedData","parse","onerror","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunkMiddleware","initStore"],"mappings":"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","file":"static/js/main.02ff2035.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal-overlay_modal__K6Qef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element_block\":\"ingredient-item-constructor_element_block__1nmCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloader_wrapper__A_rXo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"order-counter_count__2lJQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_text\":\"not-found_error_text___jg_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__2PE2q\",\"header_container\":\"app-header_header_container__2RPVL\",\"header_element\":\"app-header_header_element__cyFft\",\"navigation\":\"app-header_navigation__1IM0q\",\"menu_list\":\"app-header_menu_list__2JTqd\",\"left_menu\":\"app-header_left_menu__2qM6H\",\"right_menu\":\"app-header_right_menu__17Q9X\",\"menu_list_item\":\"app-header_menu_list_item__3k7Ae\",\"menu_list_item_active\":\"app-header_menu_list_item_active__1aJfY\",\"menu_text\":\"app-header_menu_text__1cTBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_block\":\"ingredient-details_content_block__3XMZn\",\"ingredient_name\":\"ingredient-details_ingredient_name__qPW0_\",\"info\":\"ingredient-details_info__281hE\",\"info_block\":\"ingredient-details_info_block__wULZA\",\"ingredient_container\":\"ingredient-details_ingredient_container__1m0ku\",\"ingredient_single_container\":\"ingredient-details_ingredient_single_container__23w6-\",\"single_heading\":\"ingredient-details_single_heading___1QwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_container\":\"burger-ingredients_section_container__3G0ux\",\"ingredients\":\"burger-ingredients_ingredients__38w2T\",\"tab_block\":\"burger-ingredients_tab_block__3NOaj\",\"ingredients_block\":\"burger-ingredients_ingredients_block__HYCSs\",\"ingredient_type\":\"burger-ingredients_ingredient_type__1lfR6\",\"ingredients_wrapper\":\"burger-ingredients_ingredients_wrapper__xjF1g\"};","export const BASE_URL = \"https://norma.nomoreparties.space/api\"\r\n\r\nexport const GET_ORDER_NUMBER_URL = BASE_URL + \"/orders\";\r\n\r\nexport const GET_INGREDIENTS_URL = BASE_URL + \"/ingredients\";\r\nexport const FORGOT_PASSWORD_URL = BASE_URL + \"/password-reset\";\r\nexport const RESET_PASSWORD_URL = BASE_URL + \"/password-reset/reset\";\r\n\r\nexport const LOGIN_URL = BASE_URL + \"/auth/login\";\r\nexport const REGISTRATION_URL = BASE_URL + \"/auth/register\";\r\nexport const LOGOUT_URL = BASE_URL + \"/auth/logout\";\r\nexport const REFRESH_TOKEN_URL = BASE_URL + \"/auth/token\";\r\n\r\nexport const GET_USER_URL = BASE_URL + '/auth/user';\r\nexport const PATCH_USER_URL = BASE_URL + '/auth/user';\r\n\r\n\r\nexport const tab_items = [\"Булки\", \"Соусы\", \"Начинки\"];\r\n\r\nexport const DND_TYPES = {\r\n  ingredient: 'ingredient',\r\n  sortable_ingredient: 'sortable_ingredient',\r\n}\r\n\r\nexport const PROFILE_PAGE_TYPES = {\r\n  ProfilePage: 'profile',\r\n  HistoryPage: 'history',\r\n}\r\n\r\nexport enum OrdersCounterTypes {\r\n  total = \"Выполнено за все время: \",\r\n  totalToday = \"Выполнено за сегодня: \",\r\n}\r\n\r\nconst test = 'commit and push test';","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook,\r\n} from \"react-redux\";\r\nimport { RootState } from \"./types\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { TApplicationActions } from \"./types/index\";\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  TApplicationActions\r\n>;\r\nexport type Dispatch = <TReturnType = void>(\r\n  action: TApplicationActions | AppThunk\r\n) => TReturnType;\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<Dispatch>();","import {\r\n  BurgerIcon,\r\n  ListIcon,\r\n  Logo,\r\n  ProfileIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"../app-header/app-header.module.css\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst leftMenu = [\r\n  {\r\n    title: \"Конструктор\",\r\n    url: \"/\",\r\n    icon: <BurgerIcon type=\"primary\" />,\r\n  },\r\n  {\r\n    title: \"Лента заказов\",\r\n    url: \"/feed\",\r\n    icon: <ListIcon type=\"primary\" />,\r\n  },\r\n];\r\n\r\nconst rightMenu = [\r\n  {\r\n    title: \"Личный кабинет\",\r\n    url: \"/profile\",\r\n    icon: <ProfileIcon type=\"primary\" />,\r\n  },\r\n];\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.header_container}>\r\n        <nav className={styles.navigation}>\r\n          <ul\r\n            className={`${styles.menu_list} ${styles.left_menu} ${styles.header_element}`}\r\n          >\r\n            {leftMenu.map((item, index) => (\r\n              <NavLink\r\n                exact\r\n                to={{ pathname: item.url }}\r\n                key={index}\r\n                className={`${styles.menu_list_item} text text_type_main-default text_color_inactive`}\r\n                activeStyle={{ color: \"white\" }}\r\n              >\r\n                {item.icon}\r\n                <span className=\"ml-2\">{item.title}</span>\r\n              </NavLink>\r\n            ))}\r\n          </ul>\r\n\r\n          <Link to={{ pathname: \"/\" }}>\r\n            <Logo />\r\n          </Link>\r\n\r\n          <ul\r\n            className={`${styles.menu_list} ${styles.right_menu} ${styles.header_element}`}\r\n          >\r\n            {rightMenu.map((item, index) => (\r\n              <NavLink\r\n                to={{ pathname: \"/profile\" }}\r\n                key={index}\r\n                className={`${styles.menu_list_item} text text_type_main-default text_color_inactive`}\r\n                activeStyle={{ color: \"white\" }}\r\n              >\r\n                {item.icon}\r\n                <span className=\"ml-2\">{item.title}</span>\r\n              </NavLink>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Counter } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useMemo } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\n\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n// ---------- LOCAL ----------\r\nimport styles from \"../ingredient-item/ingredient-item.module.css\";\r\nimport { DND_TYPES } from \"../../constants/constants\";\r\n// ---------- TYPES ----------\r\nimport { IIngredient } from \"../../types/common\";\r\n\r\ninterface IIngredientItem {\r\n  ingredient: IIngredient;\r\n}\r\n\r\nconst IngredientItem = ({ ingredient }: IIngredientItem) => {\r\n  const id = ingredient._id;\r\n  const type = ingredient.type;\r\n  const [{ isDrag }, dragRef] = useDrag({\r\n    type: DND_TYPES.ingredient,\r\n    item: { id, type },\r\n    collect: (monitor) => ({\r\n      isDrag: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const { currentOrderBun, currentOrderIngredients } = useSelector(\r\n    (store) => store.order\r\n  );\r\n\r\n  const counter = useMemo(() => {\r\n    if (type === \"bun\" && currentOrderBun && id === currentOrderBun._id) {\r\n      return 1;\r\n    } else\r\n      return (\r\n        currentOrderIngredients &&\r\n        currentOrderIngredients.filter((item) => item._id === id).length\r\n      );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentOrderBun, currentOrderIngredients]);\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Link\r\n      key={id}\r\n      to={{ pathname: `/ingredients/${id}`, state: { background: location } }}\r\n      className={styles.link}\r\n    >\r\n      {!isDrag && (\r\n        <li ref={dragRef} className={`${styles.ingredient_item} mb-10`}>\r\n          <img\r\n            className={styles.image}\r\n            src={ingredient.image}\r\n            alt={ingredient.name}\r\n          />\r\n\r\n          <div className={styles.price}>\r\n            <p\r\n              className={`${styles.price_text} text text_type_main-small mr-1`}\r\n            >\r\n              {ingredient.price}\r\n            </p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n\r\n          <p className={`${styles.name_text} text text_type_main-default mt-1`}>\r\n            {ingredient.name}\r\n          </p>\r\n\r\n          {counter && <Counter count={counter} size=\"default\" />}\r\n        </li>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default IngredientItem;\r\n","import { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\n// ---------- LOCAL ----------\r\nimport styles from \"../burger-ingredients/burger-ingredients.module.css\";\r\nimport IngredientItem from \"../ingredient-item/ingredient-item\";\r\nimport { tab_items } from \"../../constants/constants\";\r\n\r\nconst BurgerIngredients = () => {\r\n  const [currentTab, setCurrentTab] = useState(\"Булки\");\r\n\r\n  const { allIngredients } = useSelector((store) => store.ingredients);\r\n\r\n  const tabsRef = useRef<HTMLDivElement>(null);\r\n  const bunsRef = useRef<HTMLDivElement>(null);\r\n  const sauceRef = useRef<HTMLDivElement>(null);\r\n  const mainRef = useRef<HTMLDivElement>(null);\r\n\r\n  const changeTab = (value: string) => {\r\n    setCurrentTab(value);\r\n    switch (value) {\r\n      case tab_items[0]: {\r\n        if (bunsRef) bunsRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n      }\r\n      case tab_items[1]: {\r\n        if (sauceRef) sauceRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n      }\r\n      case tab_items[2]: {\r\n        if (mainRef) mainRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const distanseCalc = (target: any) => {\r\n    return (\r\n      tabsRef.current &&\r\n      Math.abs(\r\n        tabsRef.current.getBoundingClientRect().y -\r\n          target.current.getBoundingClientRect().y\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    const bunsDistance: number | null = distanseCalc(bunsRef);\r\n    const sauceDistance: number | null = distanseCalc(sauceRef);\r\n    const mainDistance: number | null = distanseCalc(mainRef);\r\n\r\n    const minDistanse: number | null = Math.min(\r\n      bunsDistance ?? 0,\r\n      mainDistance ?? 0,\r\n      sauceDistance ?? 0\r\n    );\r\n\r\n    if (bunsDistance === minDistanse) {\r\n      setCurrentTab(\"Булки\");\r\n    } else if (sauceDistance === minDistanse) {\r\n      setCurrentTab(\"Соусы\");\r\n    } else {\r\n      setCurrentTab(\"Начинки\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles.section_container}>\r\n      <p className=\"text text_type_main-large mt-10\">Соберите бургер</p>\r\n\r\n      <div ref={tabsRef} className={`${styles.tab_block} mt-5`}>\r\n        {tab_items.map((item, index) => (\r\n          <Tab\r\n            key={index}\r\n            value={item}\r\n            active={currentTab === tab_items[index]}\r\n            onClick={() => changeTab(tab_items[index])}\r\n          >\r\n            {item}\r\n          </Tab>\r\n        ))}\r\n      </div>\r\n\r\n      <div className={styles.ingredients_wrapper} onScroll={handleScroll}>\r\n        <p\r\n          className={`${styles.ingredient_type} text text_type_main-small mt-10 mb-6`}\r\n          ref={bunsRef}\r\n        >\r\n          Булки\r\n        </p>\r\n        <ul className={`${styles.ingredients_block} pl-4 pr-4`}>\r\n          {allIngredients &&\r\n            allIngredients.map(\r\n              (item, index) =>\r\n                item.type === \"bun\" && (\r\n                  <IngredientItem key={index} ingredient={item} />\r\n                )\r\n            )}\r\n        </ul>\r\n\r\n        <p\r\n          className={`${styles.ingredient_type} text text_type_main-small mt-10 mb-6`}\r\n          ref={sauceRef}\r\n        >\r\n          Соусы\r\n        </p>\r\n        <ul className={`${styles.ingredients_block} pl-4 pr-4`}>\r\n          {allIngredients &&\r\n            allIngredients.map(\r\n              (item, index) =>\r\n                item.type === \"sauce\" && (\r\n                  <IngredientItem key={index} ingredient={item} />\r\n                )\r\n            )}\r\n        </ul>\r\n\r\n        <p\r\n          className={`${styles.ingredient_type} text text_type_main-small mt-10 mb-6`}\r\n          ref={mainRef}\r\n        >\r\n          Начинки\r\n        </p>\r\n        <ul className={`${styles.ingredients_block} pl-4 pr-4`}>\r\n          {allIngredients &&\r\n            allIngredients.map(\r\n              (item, index) =>\r\n                item.type === \"main\" && (\r\n                  <IngredientItem key={index} ingredient={item} />\r\n                )\r\n            )}\r\n        </ul>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import PropTypes from \"prop-types\";\r\n// ---------- LOCAL ----------\r\nimport styles from \"../modal-overlay/modal-overlay.module.css\";\r\n// ---------- TYPES ----------\r\nimport { TAnyFunction } from \"../../types/common\";\r\nimport { FC } from \"react\";\r\n\r\ninterface IModalOverlay {\r\n  onClick: TAnyFunction;\r\n}\r\n\r\nconst ModalOverlay: FC<IModalOverlay> = ({ onClick }) => {\r\n  return <div id=\"modal\" className={styles.modal} onClick={onClick} />;\r\n};\r\n\r\nModalOverlay.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import { FC, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n// ---------- LOCAL ----------\r\nimport styles from \"../modal/modal.module.css\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\n// ---------- TYPES ----------\r\nimport { TAnyFunction } from \"../../types/common\";\r\n\r\nconst modalRoot: HTMLElement =\r\n  document.getElementById(\"react-modals\") || document.createElement(\"div\");\r\nmodalRoot.setAttribute(\"id\", \"react-modals\");\r\n\r\ninterface IModal {\r\n  children: React.ReactNode;\r\n  onClick: TAnyFunction;\r\n}\r\n\r\nconst Modal: FC<IModal> = ({ children, onClick }) => {\r\n  const closeByEscape = (e: KeyboardEvent) => {\r\n    if (e.key === \"Escape\") {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", closeByEscape);\r\n\r\n    return () => document.removeEventListener(\"keydown\", closeByEscape);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <ModalOverlay onClick={onClick} />\r\n      <div className={`${styles.modal_content}`}>\r\n        <div className={styles.close_icon} onClick={onClick}>\r\n          <CloseIcon type=\"primary\" />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { IOrder } from '../../types/common';\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START'  = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\n\r\nexport type TWsConnectionStart = {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n  readonly url: string;\r\n  readonly connection: string;\r\n}\r\n\r\nexport type TWsConnectionSuccess = {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport type TWsConnectionClosed = {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport type TWsGetMessage = {\r\n  readonly type: typeof WS_GET_MESSAGE;\r\n  readonly payload: {\r\n    orders: IOrder[];\r\n    success: boolean;\r\n    total: number;\r\n    totalToday: number;\r\n  }\r\n}\r\n\r\nexport type TWsConnectionError = {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\n\r\nexport type TWsActionsUnionType = \r\n  | TWsConnectionStart\r\n  | TWsConnectionSuccess\r\n  | TWsConnectionClosed\r\n  | TWsGetMessage\r\n  | TWsConnectionError\r\n\r\nexport type wsActionsType = {\r\n  wsInit: typeof WS_CONNECTION_START;\r\n  onOpen: typeof WS_CONNECTION_SUCCESS,\r\n  onClose: typeof WS_CONNECTION_CLOSED,\r\n  onError: typeof WS_CONNECTION_ERROR,\r\n  onMessage: typeof WS_GET_MESSAGE\r\n};\r\n\r\nexport enum Sockets {\r\n  AllOrders = 'all_orders',\r\n  UserOrders = 'user_orders'\r\n}\r\n","export default __webpack_public_path__ + \"static/media/done.e036971b.png\";","import { useSelector } from \"../../redux/hooks\";\r\n\r\n// ---------- LOCAL ----------\r\nimport styles from \"../order-details/order-details.module.css\";\r\nimport DONE_IMAGE from \"../../images/done.png\";\r\n\r\nconst OrderDetails = () => {\r\n  const { orderNumber } = useSelector((store) => store.makingOrder);\r\n\r\n  return (\r\n    <div className={`${styles.content_block} mt-30 mb-30 mr-25 ml-25`}>\r\n      <p className={`${styles.order_number} text text_type_digits-large`}>\r\n        {orderNumber}\r\n      </p>\r\n      <p className=\"text text_type_main-medium mt-8\">идентификатор заказа</p>\r\n      <img src={DONE_IMAGE} alt=\"галочка\" className=\"mt-15\" />\r\n      <p className=\"text text_type_main-default mt-15\">\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className={`${styles.grey_text} text text_type_main-default mt-2`}>\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","import { IIngredient } from '../types/common';\r\n\r\nexport const checkResponse = (res: any) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n\r\n  return res.json().then((result: any) => {\r\n    if (result.message) {\r\n      return Promise.reject(result.message);\r\n    } else {\r\n      return Promise.reject(res)\r\n    }\r\n  });\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport const isObjectEmpty = (obj: IIngredient | {}) => {\r\n  for (let key in obj) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport const randomKeyGenerate = () => {\r\n  return Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nexport const dateConverter = (date: string) => {\r\n  return new Date(date).toLocaleString(\"ru\", {\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n    day: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    timeZoneName: \"short\",\r\n  })\r\n}\r\n\r\nexport const ingredientPanelIndex = (index: number) => {\r\n  let zIndex;\r\n  if (index === 1) {\r\n    zIndex = 5;\r\n  } else if (index === 2) {\r\n    zIndex = 4;\r\n  }\r\n  else if (index === 3) {\r\n    zIndex = 3;\r\n  }\r\n  else if (index === 4) {\r\n    zIndex = 2;\r\n  }\r\n  else if (index === 5) {\r\n    zIndex = 1;\r\n  }\r\n  else {\r\n    zIndex = 0;\r\n  }\r\n\r\n  return zIndex;\r\n}\r\n\r\nexport const getOrderStatusName = (status: string) => {\r\n  return status === 'done' ? 'Выполнен' : status === 'pending' ? 'Готовится' : status === 'cancelled' ? 'Отменен' : ''\r\n}\r\n\r\nexport const priceCounter = (ingretients: string[], allIngredients: IIngredient[]) => {\r\n  const price = ingretients.reduce((sum, current) => {\r\n    const value = allIngredients.find(item => item._id === current)!.price\r\n    return sum + value\r\n  }, 0\r\n  )\r\n  return price\r\n}","import { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useRef } from \"react\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\n// ---------- LOCAL ----------\r\nimport styles from \"../ingredient-item-constructor/ingredient-item-constructor.module.css\";\r\nimport { DND_TYPES } from \"../../constants/constants\";\r\n// ---------- TYPES ----------\r\nimport { IIngredient, TAnyFunction } from \"../../types/common\";\r\n\r\ninterface IHoverItem {\r\n  id: string;\r\n  index: number;\r\n}\r\n\r\ninterface IIngredientItemConstructor {\r\n  item: IIngredient;\r\n  index: number;\r\n  id: string;\r\n  deleteIngredient: TAnyFunction;\r\n  moveCard: TAnyFunction;\r\n}\r\n\r\nconst IngredientItemConstructor = ({\r\n  item,\r\n  index,\r\n  id,\r\n  deleteIngredient,\r\n  moveCard,\r\n}: IIngredientItemConstructor) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const [{ handlerId }, drop] = useDrop({\r\n    accept: DND_TYPES.sortable_ingredient,\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId(),\r\n      };\r\n    },\r\n    hover(item: IHoverItem, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const clientOffset: any = monitor.getClientOffset();\r\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      moveCard(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: DND_TYPES.sortable_ingredient,\r\n    item: () => {\r\n      return { id, index };\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(drop(ref));\r\n\r\n  return (\r\n    <div\r\n      key={item.id}\r\n      className={`${styles.element_block} mb-4 mr-4`}\r\n      ref={ref}\r\n      style={{ opacity }}\r\n      data-handler-id={handlerId}\r\n    >\r\n      <DragIcon type=\"primary\" />\r\n      <ConstructorElement\r\n        text={item.name}\r\n        price={item.price}\r\n        thumbnail={item.image}\r\n        handleClose={() => deleteIngredient(item.id)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientItemConstructor;\r\n","import { GET_ORDER_NUMBER_URL } from \"../../constants/constants\";\r\nimport { IIngredient, IOrder2 } from '../../types/common';\r\nimport { AppDispatch } from '../types/index';\r\n// --------------- Экшен для получение номера заказа с сервера ---------------\r\nexport const GET_ORDER_NUMBER_REQUEST: 'GET_ORDER_NUMBER_REQUEST' = 'GET_ORDER_NUMBER_REQUEST';\r\nexport const GET_ORDER_NUMBER_FAILED: 'GET_ORDER_NUMBER_FAILED'  = 'GET_ORDER_NUMBER_FAILED';\r\nexport const GET_ORDER_NUMBER_SUCCESS: 'GET_ORDER_NUMBER_SUCCESS' = 'GET_ORDER_NUMBER_SUCCESS';\r\nexport const CLEAR_ORDER_NUMBER: 'CLEAR_ORDER_NUMBER'  = 'CLEAR_ORDER_NUMBER';\r\n\r\nexport interface IGetOrderNumberRequestAction {\r\n  readonly type: typeof GET_ORDER_NUMBER_REQUEST;\r\n}\r\n\r\nexport interface IGetOrderNumberFailedAction {\r\n  readonly type: typeof GET_ORDER_NUMBER_FAILED;\r\n}\r\n\r\nexport interface IGetOrderNumberSuccessAction {\r\n  readonly type: typeof GET_ORDER_NUMBER_SUCCESS;\r\n  readonly data: IOrder2;\r\n}\r\n\r\nexport interface IClearOrderNumberAction {\r\n  readonly type: typeof CLEAR_ORDER_NUMBER;\r\n}\r\n\r\nexport const getOrderNumber = (currentBurgerIngredients: Array<IIngredient>) => {\r\n  return async function(dispatch: AppDispatch) {\r\n    \r\n    dispatch({type: GET_ORDER_NUMBER_REQUEST});\r\n\r\n    try {\r\n      const response = await fetch(GET_ORDER_NUMBER_URL, \r\n    {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        \"Authorization\": 'Bearer ' + localStorage.getItem('accessToken'),\r\n      }, \r\n      method: 'POST', \r\n      body: JSON.stringify({ \"ingredients\": currentBurgerIngredients && currentBurgerIngredients.map(item => item._id)})\r\n    });\r\n    const result = await response.json();\r\n    dispatch({\r\n      type: GET_ORDER_NUMBER_SUCCESS,\r\n      data: result,\r\n    })\r\n    }\r\n    catch(e) {\r\n      dispatch({ type: GET_ORDER_NUMBER_FAILED})\r\n    }\r\n  } \r\n}\r\n\r\nexport type TMakingOrderAction = \r\n  | IGetOrderNumberRequestAction\r\n  | IGetOrderNumberFailedAction\r\n  | IGetOrderNumberSuccessAction\r\n  | IClearOrderNumberAction\r\n","import { IIngredient } from '../../types/common';\r\n// --------------- Экшен для добавления и удаления ингридиента в заказе ---------------\r\nexport const ADD_INGREDIENT_INTO_ORDER = 'ADD_INGRIDIENT_INTO_ORDER';\r\nexport const DELETE_INGREDIENT_FROM_ORDER = 'DELETE_INGRIDIENT_FROM_ORDER';\r\nexport const UPDATE_ORDER_AFTER_DROP = 'UPDATE_ORDER_AFTER_DROP';\r\nexport const CLEAR_ORDER = 'CLEAR_ORDER';\r\n\r\nexport interface IAddIngredientIntoOrderAction {\r\n  readonly type: typeof ADD_INGREDIENT_INTO_ORDER;\r\n  readonly ingType: string;\r\n  readonly data: IIngredient\r\n}\r\n\r\nexport interface IDeleteIngredientFromOrderAction {\r\n  readonly type: typeof DELETE_INGREDIENT_FROM_ORDER;\r\n  readonly ingId: string;\r\n}\r\n\r\nexport interface IUpdateOrderAfterDropAction {\r\n  readonly type: typeof UPDATE_ORDER_AFTER_DROP;\r\n  readonly data: Array<IIngredient>\r\n}\r\n\r\nexport interface IClearOrderAction {\r\n  readonly type: typeof CLEAR_ORDER;\r\n}\r\n\r\nexport type TOrderConstructorActions = \r\n  | IAddIngredientIntoOrderAction\r\n  | IDeleteIngredientFromOrderAction\r\n  | IUpdateOrderAfterDropAction\r\n  | IClearOrderAction","import { FC } from \"react\";\r\nimport styles from \"../preloader/preloader.module.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Preloader: FC = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Loader\r\n        color=\"rgb(128, 26, 179)\"\r\n        height={300}\r\n        width={300}\r\n        type=\"BallTriangle\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import { useState, useMemo } from \"react\";\r\nimport {\r\n  ConstructorElement,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch } from \"../../redux/hooks\";\r\nimport { useDrop } from \"react-dnd\";\r\n// ---------- LOCAL ----------\r\nimport styles from \"../burger-constructor/burger-constructor.module.css\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport { randomKeyGenerate } from \"../../utils/js-utils\";\r\nimport IngredientItemConstructor from \"../ingredient-item-constructor/ingredient-item-constructor\";\r\nimport { DND_TYPES } from \"../../constants/constants\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// ---------- REDUX ACTIONS ----------\r\nimport { getOrderNumber } from \"../../redux/actions/makingOrder\";\r\nimport {\r\n  ADD_INGREDIENT_INTO_ORDER,\r\n  DELETE_INGREDIENT_FROM_ORDER,\r\n} from \"../../redux/actions/orderConstructor\";\r\nimport {\r\n  UPDATE_ORDER_AFTER_DROP,\r\n  CLEAR_ORDER,\r\n} from \"../../redux/actions/orderConstructor\";\r\nimport { CLEAR_ORDER_NUMBER } from \"../../redux/actions/makingOrder\";\r\n// ---------- TYPES ----------\r\nimport { IDragItem } from \"../../types/common\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\nimport Preloader from \"../preloader/preloader\";\r\n\r\nconst BurgetConstructor = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { currentOrderBun, currentOrderIngredients } = useSelector(\r\n    (store) => store.order\r\n  );\r\n  const { getOrderRequest } = useSelector((store) => store.makingOrder);\r\n  const { allIngredients } = useSelector((store) => store.ingredients);\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const [{ isOver }, dropTarget] = useDrop({\r\n    accept: DND_TYPES.ingredient,\r\n    drop(item: IDragItem) {\r\n      const ingObj = allIngredients!.find((ing) => ing._id === item.id);\r\n      if (ingObj) {\r\n        dispatch({\r\n          type: ADD_INGREDIENT_INTO_ORDER,\r\n          ingType: item.type,\r\n          data: {\r\n            ...ingObj,\r\n            id: randomKeyGenerate(),\r\n          },\r\n        });\r\n      }\r\n    },\r\n    collect(monitor) {\r\n      return {\r\n        isOver: monitor.isOver(),\r\n      };\r\n    },\r\n  });\r\n\r\n  const totalPrice = useMemo(() => {\r\n    const bunPrice = currentOrderBun ? currentOrderBun.price : 0;\r\n\r\n    const mainPrice = currentOrderIngredients\r\n      ? currentOrderIngredients\r\n          .map((item) => item.price)\r\n          .reduce((sum, item) => sum + item)\r\n      : 0;\r\n\r\n    return bunPrice + mainPrice;\r\n  }, [currentOrderIngredients, currentOrderBun]);\r\n\r\n  const handleOpenModal = () => {\r\n    if (user) {\r\n      if (currentOrderBun && currentOrderIngredients) {\r\n        const currentIngredientsIds = [\r\n          ...currentOrderIngredients,\r\n          currentOrderBun,\r\n        ];\r\n        dispatch(getOrderNumber(currentIngredientsIds));\r\n        setActive(true);\r\n      }\r\n    } else {\r\n      history.replace({ pathname: \"/login\" });\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    dispatch({ type: CLEAR_ORDER });\r\n    dispatch({ type: CLEAR_ORDER_NUMBER });\r\n    setActive(false);\r\n  };\r\n\r\n  const deleteIngredient = (id: string) =>\r\n    dispatch({\r\n      type: DELETE_INGREDIENT_FROM_ORDER,\r\n      ingId: id,\r\n    });\r\n\r\n  const moveCard = (dragIndex: number, hoverIndex: number) => {\r\n    if (currentOrderIngredients) {\r\n      const dragCard = currentOrderIngredients[dragIndex];\r\n      const newOrderIngredients = [...currentOrderIngredients];\r\n      newOrderIngredients.splice(dragIndex, 1);\r\n      newOrderIngredients.splice(hoverIndex, 0, dragCard);\r\n\r\n      dispatch({\r\n        type: UPDATE_ORDER_AFTER_DROP,\r\n        data: newOrderIngredients,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section\r\n      ref={dropTarget}\r\n      className={`${styles.section_container} ${\r\n        isOver ? styles.section_border : \"\"\r\n      } mt-25`}\r\n    >\r\n      {currentOrderBun && (\r\n        <div className=\"ml-10 mr-5 mb-4\">\r\n          <ConstructorElement\r\n            type=\"top\"\r\n            key={currentOrderBun.id + \"верх\"}\r\n            text={currentOrderBun.name + \"(верх)\"}\r\n            price={currentOrderBun.price}\r\n            thumbnail={currentOrderBun.image}\r\n            isLocked={true}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {currentOrderIngredients && (\r\n        <div className={styles.ingredients_wrapper}>\r\n          {currentOrderIngredients.map((item, index) => (\r\n            <IngredientItemConstructor\r\n              key={item.id}\r\n              item={item}\r\n              id={item.id ?? \"\"}\r\n              index={index}\r\n              deleteIngredient={deleteIngredient}\r\n              moveCard={moveCard}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {currentOrderBun && (\r\n        <div className=\"ml-10 mt-3\">\r\n          <ConstructorElement\r\n            type=\"bottom\"\r\n            key={currentOrderBun.id + \"низ\"}\r\n            text={currentOrderBun.name + \"(низ)\"}\r\n            price={currentOrderBun.price}\r\n            thumbnail={currentOrderBun.image}\r\n            isLocked={true}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {!!totalPrice && (\r\n        <div className={`${styles.total} mt-10 mr-4`}>\r\n          <div className={`${styles.total_price} mr-10`}>\r\n            <p\r\n              className={`${styles.total_price_number} text text_type_main-default mr-2`}\r\n            >{`${totalPrice}`}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n          <Button onClick={handleOpenModal} type=\"primary\" size=\"medium\">\r\n            Оформить заказ\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {active &&\r\n        (getOrderRequest ? (\r\n          <Preloader />\r\n        ) : (\r\n          <Modal onClick={handleCloseModal}>\r\n            <OrderDetails />\r\n          </Modal>\r\n        ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgetConstructor;\r\n","import { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n// ---------- LOCAL ----------\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\nimport styles from \"../main/main.module.css\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <main className={styles.main_container}>\r\n      <div className={`${styles.ingredients_block}`}>\r\n        <DndProvider backend={HTML5Backend}>\r\n          <BurgerIngredients />\r\n          <BurgerConstructor />\r\n        </DndProvider>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { LOGIN_URL, REGISTRATION_URL, LOGOUT_URL, REFRESH_TOKEN_URL, GET_USER_URL, PATCH_USER_URL  } from '../../constants/constants';\r\nimport { IUserData, ISuccessRegistrationData, IRefreshTokenData, IUserRegistrationData, TAnyFunction } from '../../types/common';\r\nimport { checkResponse } from '../../utils/js-utils';\r\n// import { Dispatch } from '../types/index';\r\nimport { Dispatch } from '../hooks';\r\n// ----- Регистрация ----\r\nexport const REGISTRATION_REQUEST: 'REGISTRATION REQUEST' = 'REGISTRATION REQUEST';\r\nexport const REGISTRATION_ERROR: 'REGISTRATION ERROR' = 'REGISTRATION ERROR';\r\nexport const REGISTRATION_SUCCESS: 'REGISTRATION SUCCESS' = 'REGISTRATION SUCCESS';\r\n\r\nexport interface IRegistrationRequestAction {\r\n  readonly type: typeof REGISTRATION_REQUEST\r\n}\r\n\r\nexport interface IRegistrationRequestError {\r\n  readonly type: typeof REGISTRATION_ERROR\r\n}\r\n\r\nexport interface IRegistrationSuccessAction {\r\n  readonly type: typeof REGISTRATION_SUCCESS\r\n  readonly data: ISuccessRegistrationData\r\n}\r\n\r\nexport const fetchRegistration = (email: string, password: string, name: string) => {\r\n  return function(dispatch: Dispatch) {\r\n    dispatch({ type: REGISTRATION_REQUEST });\r\n\r\n    const data = { \"email\": email, \"password\": password, \"name\": name }\r\n\r\n    fetch(REGISTRATION_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => {\r\n        if (result.success) {\r\n          localStorage.setItem('refreshToken', result.refreshToken);\r\n          localStorage.setItem('accessToken', result.accessToken);\r\n          dispatch({ type: REGISTRATION_SUCCESS, data: result })\r\n        }\r\n      })\r\n      .catch(err => dispatch({ type: REGISTRATION_ERROR }))\r\n  }\r\n}\r\n\r\n\r\n// ----- Авторизация ----\r\nexport const AUTH_REQUEST: 'AUTH_REQUEST' = 'AUTH_REQUEST';\r\nexport const AUTH_ERROR: 'AUTH_ERROR' = 'AUTH_ERROR';\r\nexport const AUTH_SUCCESS: 'AUTH_SUCCESS' = 'AUTH_SUCCESS';\r\n\r\nexport interface IAuthRequestAction {\r\n  readonly type: typeof AUTH_REQUEST\r\n}\r\n\r\nexport interface IAuthErrorAction {\r\n  readonly type: typeof AUTH_ERROR\r\n}\r\n\r\nexport interface IAuthSuccessAction {\r\n  readonly type: typeof AUTH_SUCCESS\r\n  readonly data: ISuccessRegistrationData\r\n}\r\n\r\nexport const fetchAuthorization = (email: string, password: string) => {\r\n  return function(dispatch: Dispatch) {\r\n    \r\n    dispatch({ type: AUTH_REQUEST });\r\n\r\n    const data = { \"email\": email, \"password\": password }\r\n\r\n    fetch(LOGIN_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => {\r\n        if (result.success) {\r\n          localStorage.setItem('refreshToken', result.refreshToken);\r\n          localStorage.setItem('accessToken', result.accessToken.split('Bearer ')[1]);\r\n          dispatch({ type: AUTH_SUCCESS, data: result })\r\n        }\r\n      })\r\n      .catch(err => dispatch({ type: AUTH_ERROR }))\r\n  }\r\n}\r\n\r\n// ------ Обновление токена -----\r\nexport const REFRESH_TOKEN_REQUEST: 'REFRESH_TOKEN_REQUEST' = 'REFRESH_TOKEN_REQUEST';\r\nexport const REFRESH_TOKEN_ERROR: 'REFRESH_TOKEN_ERROR' = 'REFRESH_TOKEN_ERROR';\r\nexport const REFRESH_TOKEN_SUCCESS: 'REFRESH_TOKEN_SUCCESS' = 'REFRESH_TOKEN_SUCCESS';\r\n\r\nexport interface IRefreshTokenRequestAction {\r\n  readonly type: typeof REFRESH_TOKEN_REQUEST\r\n}\r\n\r\nexport interface IRefreshTokenErrorAction {\r\n  readonly type: typeof REFRESH_TOKEN_ERROR\r\n}\r\n\r\nexport interface IRefreshTokenSuccessAction {\r\n  readonly type: typeof REFRESH_TOKEN_SUCCESS\r\n  readonly data: IRefreshTokenData\r\n}\r\n\r\nexport const refreshToken = (nextAction: TAnyFunction) => {\r\n  \r\n  return function(dispatch: Dispatch) {\r\n    dispatch({ type: REFRESH_TOKEN_REQUEST });\r\n\r\n    fetch(REFRESH_TOKEN_URL, {\r\n      method: 'POST',\r\n      headers: { \r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        token: localStorage.getItem('refreshToken')\r\n      })\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => {\r\n        if (result.success) {\r\n          localStorage.setItem('refreshToken', result.refreshToken);\r\n          localStorage.setItem('accessToken', result.accessToken.split('Bearer ')[1]);\r\n          dispatch({ type: REFRESH_TOKEN_SUCCESS, data: result })\r\n          dispatch(nextAction)\r\n        }\r\n      })\r\n      .catch(err => err === 'Token is invalid' ? dispatch(logout()) : console.error(err))\r\n  }\r\n}\r\n\r\n\r\n// ----- Информация о пользователе ----\r\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\r\nexport const GET_USER_ERROR: 'GET_USER_ERROR' = 'GET_USER_ERROR';\r\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\r\n\r\nexport interface IGetUserRequestAction {\r\n  readonly type: typeof GET_USER_REQUEST\r\n}\r\n\r\nexport interface IGetUserErrorAction {\r\n  readonly type: typeof GET_USER_ERROR\r\n}\r\n\r\nexport interface IGetUserSuccessAction {\r\n  readonly type: typeof GET_USER_SUCCESS\r\n  readonly data: IUserRegistrationData\r\n}\r\n\r\nexport const getUser\r\n = () => {\r\n  return function(dispatch: Dispatch) {\r\n    dispatch({ type: GET_USER_REQUEST });\r\n\r\n    fetch(GET_USER_URL, {\r\n      headers: {\r\n        \"Authorization\": 'Bearer ' + localStorage.getItem('accessToken'),\r\n      }\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => dispatch({ type: GET_USER_SUCCESS, data: result.user }))\r\n      .catch(err => err === 'jwt expired' ? dispatch(refreshToken(getUser())) : console.error(err))\r\n  }\r\n}\r\n\r\n// ----- Редактирование информации о пользователе ----\r\nexport const PATCH_USER_REQUEST: 'PATCH_USER_REQUEST' = 'PATCH_USER_REQUEST';\r\nexport const PATCH_USER_ERROR: 'PATCH_USER_ERROR' = 'PATCH_USER_ERROR';\r\nexport const PATCH_USER_SUCCESS: 'PATCH_USER_SUCCESS' = 'PATCH_USER_SUCCESS';\r\nexport const IS_DATA_USER_UPDATED: 'IS_DATA_USER_UPDATED' = 'IS_DATA_USER_UPDATED';\r\n\r\nexport interface IPatchUserRequestAction {\r\n  readonly type: typeof PATCH_USER_REQUEST\r\n}\r\n\r\nexport interface IPatchUserErrorAction {\r\n  readonly type: typeof PATCH_USER_ERROR\r\n}\r\n\r\nexport interface IPatchUserSuccessAction {\r\n  readonly type: typeof PATCH_USER_SUCCESS\r\n  readonly data: IUserRegistrationData\r\n}\r\n\r\nexport interface IIsDataUserUpdatesAction {\r\n  readonly type: typeof IS_DATA_USER_UPDATED\r\n}\r\n\r\nexport const patchUser = (user: IUserData) => {\r\n  return function(dispatch: Dispatch) {\r\n    dispatch({ type: PATCH_USER_REQUEST });\r\n\r\n    const data = { \"email\": user.email, \"password\": user.password, \"name\": user.name }\r\n  \r\n    fetch(PATCH_USER_URL, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Authorization\": 'Bearer ' + localStorage.getItem('accessToken'),\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => {\r\n        if (!result.success && result.message === \"jwt expired\") {\r\n          refreshToken(patchUser(user))\r\n        }\r\n        if (result.success) {\r\n          dispatch({ type: PATCH_USER_SUCCESS, data: result.user })\r\n        }\r\n      })\r\n      .catch(err => dispatch({ type: PATCH_USER_ERROR }))\r\n  }\r\n}\r\n\r\n\r\n// ----- Выход из системы ----\r\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_ERROR: 'LOGOUT__ERROR' = 'LOGOUT__ERROR';\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\n\r\nexport interface ILogoutRequestAction {\r\n  readonly type: typeof LOGOUT_REQUEST\r\n}\r\n\r\nexport interface ILogoutErrorAction {\r\n  readonly type: typeof LOGOUT_ERROR\r\n}\r\n\r\nexport interface ILogoutSuccessAction {\r\n  readonly type: typeof LOGOUT_SUCCESS\r\n}\r\n\r\nexport const logout = () => {\r\n  return function(dispatch: Dispatch) {\r\n    dispatch({ type: LOGOUT_REQUEST });\r\n\r\n    fetch(LOGOUT_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ \"token\": localStorage.getItem('refreshToken') })\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => {\r\n        if (result.success) {\r\n          dispatch({ type: LOGOUT_SUCCESS })\r\n          localStorage.removeItem('accessToken');\r\n          localStorage.removeItem('refreshToken');\r\n        }\r\n      })\r\n      .catch(err => dispatch({ type: LOGOUT_ERROR }))\r\n  }\r\n}\r\n\r\nexport type TAuthActions = \r\n  | IRegistrationRequestAction\r\n  | IRegistrationRequestError\r\n  | IRegistrationSuccessAction\r\n  | IAuthRequestAction\r\n  | IAuthErrorAction\r\n  | IAuthSuccessAction\r\n  | IRefreshTokenRequestAction\r\n  | IRefreshTokenErrorAction\r\n  | IRefreshTokenSuccessAction\r\n  | IGetUserRequestAction\r\n  | IGetUserErrorAction\r\n  | IGetUserSuccessAction\r\n  | IPatchUserRequestAction\r\n  | IPatchUserErrorAction\r\n  | IPatchUserSuccessAction\r\n  | IIsDataUserUpdatesAction\r\n  | ILogoutRequestAction\r\n  | ILogoutErrorAction\r\n  | ILogoutSuccessAction\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  EmailInput,\r\n  PasswordInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n// LOCAL\r\nimport styles from \"./login.module.css\";\r\nimport { fetchAuthorization } from \"../../redux/actions/auth\";\r\n\r\ntype LocationState = {\r\n  from: {\r\n    pathname: string;\r\n  };\r\n};\r\n\r\nconst LoginPage = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setPassword(e.target.value);\r\n  const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setEmail(e.target.value);\r\n\r\n  const handleClick = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(fetchAuthorization(email, password));\r\n  };\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n  const { state } = useLocation<LocationState>();\r\n\r\n  useEffect(() => {\r\n    if (user && state?.from) {\r\n      history.replace({ pathname: state.from.pathname });\r\n    } else {\r\n      user && history.replace({ pathname: \"/\" });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={styles.login_container}>\r\n      <p className=\"text text_type_main-default\">Вход</p>\r\n\r\n      <form\r\n        onSubmit={handleClick}\r\n        className={`${styles.form_block} mt-6 mb-20`}\r\n      >\r\n        <div className=\"mb-6\">\r\n          <EmailInput onChange={onEmailChange} value={email} name={\"email\"} />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <PasswordInput\r\n            onChange={onPasswordChange}\r\n            value={password}\r\n            name={\"password\"}\r\n          />\r\n        </div>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Войти\r\n        </Button>\r\n      </form>\r\n\r\n      <div className={styles.bottom_info}>\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вы — новый пользователь?\r\n        </p>\r\n        <Link\r\n          to={{ pathname: \"/register\" }}\r\n          className={`text text_type_main-default ml-4 ${styles.link}`}\r\n        >\r\n          Зарегистрироваться\r\n        </Link>\r\n      </div>\r\n      <div className={`${styles.bottom_info} mt-4`}>\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Забыли пароль?\r\n        </p>\r\n        <Link\r\n          to={{ pathname: \"/forgot-password\" }}\r\n          className={`text text_type_main-default ml-4 ${styles.link}`}\r\n        >\r\n          Восстановить пароль\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  Input,\r\n  EmailInput,\r\n  PasswordInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// LOCAL\r\nimport styles from \"./register.module.css\";\r\nimport { fetchRegistration } from \"../../redux/actions/auth\";\r\n\r\nconst RegisterPage = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const onNameChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setName(e.target.value);\r\n  const onPasswordChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setPassword(e.target.value);\r\n  const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setEmail(e.target.value);\r\n\r\n  const handleClick = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(fetchRegistration(email, password, name));\r\n  };\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n\r\n  useEffect(() => {\r\n    user && history.replace({ pathname: \"/\" });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.login_container}>\r\n        <p className=\"text text_type_main-default\">Регистрация</p>\r\n\r\n        <form\r\n          onSubmit={handleClick}\r\n          className={`${styles.form_block} mt-6 mb-20`}\r\n        >\r\n          <div className=\"mb-6\">\r\n            <Input\r\n              onChange={onNameChange}\r\n              value={name}\r\n              name={\"name\"}\r\n              placeholder=\"Имя\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <EmailInput onChange={onEmailChange} value={email} name={\"email\"} />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <PasswordInput\r\n              onChange={onPasswordChange}\r\n              value={password}\r\n              name={\"password\"}\r\n            />\r\n          </div>\r\n          <Button type=\"primary\" size=\"medium\">\r\n            Зарегистрироваться\r\n          </Button>\r\n        </form>\r\n\r\n        <div className={styles.bottom_info}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Уже зарегистрированы\r\n          </p>\r\n          <Link\r\n            to={{ pathname: \"/login\" }}\r\n            className={`text text_type_main-default ml-4 ${styles.link}`}\r\n          >\r\n            Войти\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import { FORGOT_PASSWORD_URL, RESET_PASSWORD_URL } from '../../constants/constants';\r\nimport { checkResponse } from '../../utils/js-utils';\r\nimport { AppDispatch } from '../types/index';\r\n\r\n// FORGOT PASSWORD - Первичный запрос на сброс пароля\r\nexport const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_ERROR: 'FORGOT_PASSWORD_ERROR' = 'FORGOT_PASSWORD_ERROR';\r\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\r\n\r\nexport interface IForgotPasswordRequestAction {\r\n  readonly type: typeof FORGOT_PASSWORD_REQUEST\r\n}\r\n\r\nexport interface IForgotPasswordErrorAction {\r\n  readonly type: typeof FORGOT_PASSWORD_ERROR\r\n}\r\n\r\nexport interface IForgotPasswordSuccessAction {\r\n  readonly type: typeof FORGOT_PASSWORD_SUCCESS\r\n}\r\n\r\nexport const fetchForgotPasswort = (email: string) => {\r\n  return function(dispatch: AppDispatch) {\r\n    \r\n    dispatch({ type: FORGOT_PASSWORD_REQUEST});\r\n\r\n    const data = { \"email\": email };\r\n\r\n    fetch(FORGOT_PASSWORD_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => dispatch({ type: FORGOT_PASSWORD_SUCCESS }) )\r\n      .catch(err => dispatch({ type: FORGOT_PASSWORD_ERROR}))\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------------------\r\n// RESET PASSWORD - Вторичный запрос на сброс пароля и назначение нового\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_ERROR: 'RESET_PASSWORD_ERROR' = 'RESET_PASSWORD_ERROR';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\n\r\nexport interface IResetPasswordRequestAction {\r\n  readonly type: typeof RESET_PASSWORD_REQUEST\r\n}\r\n\r\nexport interface IResetPasswordErrorAction {\r\n  readonly type: typeof RESET_PASSWORD_ERROR\r\n}\r\n\r\nexport interface IResetPasswordSuccessAction {\r\n  readonly type: typeof RESET_PASSWORD_SUCCESS\r\n}\r\n\r\nexport const fetchResetPassword = (newPassword: string, code: string) => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({ type: RESET_PASSWORD_REQUEST})\r\n\r\n    const data = { \"password\": newPassword, \"token\": code};\r\n\r\n    fetch(RESET_PASSWORD_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(checkResponse)\r\n      .then(result => dispatch({ type: RESET_PASSWORD_SUCCESS}))\r\n      .catch(err => dispatch({ type: RESET_PASSWORD_ERROR}))\r\n  }\r\n} \r\n\r\nexport type TForgotPasswordActions = \r\n  | IForgotPasswordRequestAction\r\n  | IForgotPasswordErrorAction\r\n  | IForgotPasswordSuccessAction\r\n  | IResetPasswordRequestAction\r\n  | IResetPasswordErrorAction\r\n  | IResetPasswordSuccessAction\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  EmailInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// LOCAL\r\nimport styles from \"./forgot-password.module.css\";\r\nimport { fetchForgotPasswort } from \"../../redux/actions/forgotPassword\";\r\n\r\nconst ForgotPasswordPage = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { forgotPasswordStatus } = useSelector((store) => store.forgotPassword);\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const onEmailChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setEmail(e.target.value);\r\n\r\n  const handleClick = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(fetchForgotPasswort(email));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (forgotPasswordStatus) {\r\n      history.replace({ pathname: \"/reset-password\" });\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [forgotPasswordStatus]);\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n\r\n  useEffect(() => {\r\n    user && history.replace({ pathname: \"/\" });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className={styles.login_container}>\r\n      <p className=\"text text_type_main-default\">Восстановление пароля</p>\r\n\r\n      <form\r\n        onSubmit={handleClick}\r\n        className={`${styles.form_block} mt-6 mb-20`}\r\n      >\r\n        <div className=\"mb-6\">\r\n          <EmailInput onChange={onEmailChange} value={email} name={\"email\"} />\r\n        </div>\r\n        <Button type=\"primary\" size=\"medium\">\r\n          Восстановить\r\n        </Button>\r\n      </form>\r\n\r\n      <div className={styles.bottom_info}>\r\n        <p className=\"text text_type_main-default text_color_inactive\">\r\n          Вспомнили пароль?\r\n        </p>\r\n        <Link\r\n          to={{ pathname: \"/login\" }}\r\n          className={`text text_type_main-default ml-4 ${styles.link}`}\r\n        >\r\n          Войти\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  Input,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// LOCAL\r\nimport styles from \"./reset-password.module.css\";\r\nimport { fetchResetPassword } from \"../../redux/actions/forgotPassword\";\r\n\r\nconst ResetPasswordPage = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { resetPasswordStatus, recoveryStage } = useSelector(\r\n    (store) => store.forgotPassword\r\n  );\r\n\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [mailCode, setMailCode] = useState(\"\");\r\n\r\n  const handleClick = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    dispatch(fetchResetPassword(newPassword, mailCode));\r\n  };\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n\r\n  useEffect(() => {\r\n    user && history.replace({ pathname: \"/\" });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    recoveryStage !== 1 && history.replace({ pathname: \"/forgot-password\" });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [recoveryStage]);\r\n\r\n  return (\r\n    <div className={styles.login_container}>\r\n      {resetPasswordStatus ? (\r\n        <p className=\"text text_type_main-large\">Пароль успешно изменен.</p>\r\n      ) : (\r\n        <>\r\n          <p className=\"text text_type_main-default\">Восстановление пароля</p>\r\n          <form\r\n            onSubmit={handleClick}\r\n            className={`${styles.form_block} mt-6 mb-20`}\r\n          >\r\n            <div className=\"mb-6\">\r\n              <Input\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                value={newPassword}\r\n                name={\"new-password\"}\r\n                placeholder=\"Введите новый пароль\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-6\">\r\n              <Input\r\n                onChange={(e) => setMailCode(e.target.value)}\r\n                value={mailCode}\r\n                name={\"mail-code\"}\r\n                placeholder=\"Введите код из письма\"\r\n              />\r\n            </div>\r\n            <Button type=\"primary\" size=\"medium\">\r\n              Восстановить\r\n            </Button>\r\n          </form>\r\n          <div className={styles.bottom_info}>\r\n            <p className=\"text text_type_main-default text_color_inactive\">\r\n              Вспомнили пароль?\r\n            </p>\r\n            <Link\r\n              to={{ pathname: \"/login\" }}\r\n              className={`text text_type_main-default ml-4 ${styles.link}`}\r\n            >\r\n              Войти\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","import {\r\n  Input,\r\n  PasswordInput,\r\n  Button,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\n// LOCAL\r\nimport styles from \"./profile-user-block.module.css\";\r\nimport { patchUser } from \"../../redux/actions/auth\";\r\nimport { IS_DATA_USER_UPDATED } from \"../../redux/actions/auth\";\r\n\r\nconst UserBlock = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, isUserDataUpdated } = useSelector((store) => store.auth);\r\n\r\n  const [userData, setUserData] = useState({\r\n    name: user ? user.name : \"\",\r\n    email: user ? user.email : \"\",\r\n    password: \"\",\r\n  });\r\n  const [isBtnShown, setIsBtnShown] = useState(false);\r\n  const [isErrorShown, setIsErrorShown] = useState(false);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserData({\r\n      ...userData,\r\n      name: user ? user.name : \"\",\r\n      email: user ? user.email : \"\",\r\n      password: \"\",\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  const onCancelClick = () => {\r\n    setUserData({\r\n      ...userData,\r\n      name: user!.name ?? \"\",\r\n      email: user!.email ?? \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  const onSaveClick = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    userData.name && userData.email && userData.password\r\n      ? dispatch(patchUser(userData))\r\n      : setIsErrorShown(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    isErrorShown && setTimeout(() => setIsErrorShown(false), 3000);\r\n  }, [isErrorShown]);\r\n\r\n  useEffect(() => {\r\n    isUserDataUpdated &&\r\n      setTimeout(() => dispatch({ type: IS_DATA_USER_UPDATED }), 3000);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isUserDataUpdated]);\r\n\r\n  useEffect(() => {\r\n    setIsBtnShown(\r\n      userData.name !== user!.name ||\r\n        userData.email !== user!.email ||\r\n        userData.password\r\n        ? true\r\n        : false\r\n    );\r\n  }, [userData, user]);\r\n\r\n  return (\r\n    <form onSubmit={onSaveClick} className=\"mb-20`\">\r\n      <div className=\"mb-6\">\r\n        <Input\r\n          onChange={(name) => handleChange(name)}\r\n          name={\"name\"}\r\n          value={userData.name}\r\n          placeholder=\"Имя\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <Input\r\n          onChange={(name) => handleChange(name)}\r\n          name={\"email\"}\r\n          value={userData.email}\r\n          placeholder=\"Логин\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-6\">\r\n        <PasswordInput\r\n          onChange={(name) => handleChange(name)}\r\n          name={\"password\"}\r\n          value={userData.password}\r\n        />\r\n      </div>\r\n      {isErrorShown && (\r\n        <p className={`text text_type_main-small ${styles.error_info}`}>\r\n          Данные не заполнены\r\n        </p>\r\n      )}\r\n      {isUserDataUpdated && (\r\n        <p className={`text text_type_main-small ${styles.ok_message_info}`}>\r\n          Данные успешно сохранены\r\n        </p>\r\n      )}\r\n      {isBtnShown && (\r\n        <div>\r\n          <Button type=\"primary\" size=\"small\">\r\n            Сохранить\r\n          </Button>\r\n          <Button onClick={onCancelClick} type=\"secondary\" size=\"medium\">\r\n            Отмена\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UserBlock;\r\n","import styles from \"./ingredient-logo.module.css\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\nimport { ingredientPanelIndex } from \"../../utils/js-utils\";\r\nimport { useMemo } from \"react\";\r\n\r\ninterface IngredientLogoProps {\r\n  isShifted?: boolean;\r\n  index?: number;\r\n  ingredient: string;\r\n  restNumber?: string;\r\n}\r\n\r\nconst IngredientLogo: React.FC<IngredientLogoProps> = ({\r\n  index,\r\n  ingredient,\r\n  isShifted,\r\n  restNumber,\r\n}) => {\r\n  const { allIngredients } = useSelector((store) => store.ingredients);\r\n\r\n  const ingredientInfo = useMemo(() => {\r\n    return (\r\n      allIngredients && allIngredients.find((item) => item._id === ingredient)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ingredient]);\r\n\r\n  const shiftStyle =\r\n    isShifted && index\r\n      ? {\r\n          left: `${(index - 1) * 50}px`,\r\n          zIndex: ingredientPanelIndex(index),\r\n        }\r\n      : {};\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.image_block} ${\r\n        isShifted ? styles.image_block_position_absolute : \"\"\r\n      }`}\r\n      style={shiftStyle}\r\n      key={index}\r\n    >\r\n      {ingredientInfo && (\r\n        <>\r\n          <img\r\n            src={ingredientInfo.image}\r\n            alt=\"Логотип ингридиента\"\r\n            className={styles.ingredient_image}\r\n          />\r\n          {index === 6 && <p className={styles.rest_number}>{restNumber}</p>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientLogo;\r\n","import React, { useMemo } from \"react\";\r\nimport styles from \"../order-panel/order-panel.module.css\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n// ----- Local -----\r\nimport { IOrder } from \"../../types/common\";\r\nimport { dateConverter, priceCounter } from \"../../utils/js-utils\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\nimport IngredientLogo from \"../ingredient-logo/ingredient-logo\";\r\nimport { Sockets } from \"../../redux/actions/wsActions\";\r\n\r\ninterface OrderPanelProps {\r\n  order: IOrder;\r\n  wsType: string;\r\n}\r\n\r\nconst OrderPanel: React.FC<OrderPanelProps> = ({ order, wsType }) => {\r\n  const { ingredients, name, number, createdAt, _id } = order;\r\n  const { allIngredients } = useSelector((store) => store.ingredients);\r\n\r\n  const restNumber = useMemo(() => `+${ingredients.length - 5}`, [ingredients]);\r\n\r\n  const location = useLocation();\r\n\r\n  const getPathname = () => {\r\n    if (wsType === Sockets.AllOrders) {\r\n      return `/feed/${_id}`;\r\n    }\r\n\r\n    if (wsType === Sockets.UserOrders) {\r\n      return `/profile/orders/${_id}`;\r\n    }\r\n  };\r\n\r\n  const price = useMemo(\r\n    () => allIngredients && priceCounter(order.ingredients, allIngredients),\r\n    [allIngredients, order]\r\n  );\r\n\r\n  return (\r\n    <Link\r\n      to={{ pathname: getPathname(), state: { background: location } }}\r\n      className={styles.link}\r\n    >\r\n      <div className={`${styles.order_block} p-6 mb-3`}>\r\n        <div className={`${styles.number_date_block} mb-6`}>\r\n          <p className=\"text text_type_digits-default\">#{number}</p>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {dateConverter(createdAt)}\r\n          </p>\r\n        </div>\r\n\r\n        <p className=\"text text_type_main-medium mb-6\">{name}</p>\r\n\r\n        <div className={styles.bottom_block}>\r\n          <div className={styles.ingredients_block}>\r\n            {allIngredients &&\r\n              ingredients.map((ing, index) => {\r\n                // eslint-disable-next-line array-callback-return\r\n                if (index > 5) return;\r\n                return (\r\n                  <IngredientLogo\r\n                    key={index}\r\n                    isShifted\r\n                    ingredient={ing}\r\n                    index={index + 1}\r\n                    restNumber={restNumber}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n\r\n          <div className={styles.price_block}>\r\n            <p className=\"text text_type_main-default mr-1\">{price}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default OrderPanel;\r\n","import styles from \"./order-history.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_CLOSED,\r\n  Sockets,\r\n} from \"../../redux/actions/wsActions\";\r\nimport OrderPanel from \"../order-panel/order-panel\";\r\n\r\nconst OrderHistory = () => {\r\n  const dispatch = useDispatch();\r\n  const { messages } = useSelector((store) => store.ws);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: WS_CONNECTION_START,\r\n      url: \"wss://norma.nomoreparties.space/orders\",\r\n      connection: Sockets.UserOrders,\r\n    });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.orders_container}>\r\n      {messages && (\r\n        <div className={styles.ingredients_wrapper}>\r\n          {messages.map((item, index) => (\r\n            <OrderPanel order={item} key={index} wsType={Sockets.UserOrders} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistory;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { logout } from \"../../redux/actions/auth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// LOCAL\r\nimport styles from \"./profile.module.css\";\r\nimport { PROFILE_PAGE_TYPES } from \"../../constants/constants\";\r\nimport UserBlock from \"../../components/profile-user-block/profile-user-block\";\r\nimport OrderHistory from \"../../components/order-history/order-history\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface IProfile {\r\n  type: string;\r\n}\r\n\r\nconst ProfilePage = ({ type }: IProfile) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n\r\n  const logoutClicked = () => {\r\n    dispatch(logout());\r\n    !user && history.replace({ pathname: \"/login\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user && !!localStorage.getItem(\"access_token\")) {\r\n      history.replace({ pathname: \"/login\" });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className={`mt-30 ${styles.profile_container}`}>\r\n        <div className={`mr-15 ${styles.nav_container}`}>\r\n          <NavLink\r\n            to={{ pathname: \"/profile\" }}\r\n            className={`mb-6 text text_type_main-medium text_color_inactive ${styles.profile_nav_link}`}\r\n            activeClassName={styles.profile_nav_active_link}\r\n            exact\r\n          >\r\n            Профиль\r\n          </NavLink>\r\n          <NavLink\r\n            to={{ pathname: \"/profile/orders\" }}\r\n            className={`mb-6 text text_type_main-medium text_color_inactive ${styles.profile_nav_link}`}\r\n            activeClassName={styles.profile_nav_active_link}\r\n            exact\r\n          >\r\n            История заказов\r\n          </NavLink>\r\n          <span\r\n            onClick={logoutClicked}\r\n            className={`mb-20 text text_type_main-medium text_color_inactive ${styles.profile_nav_link}`}\r\n          >\r\n            Выход\r\n          </span>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            В этом разделе вы можете изменить свои персональные данные\r\n          </p>\r\n        </div>\r\n        {type === PROFILE_PAGE_TYPES.ProfilePage ? (\r\n          <UserBlock />\r\n        ) : (\r\n          <OrderHistory />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { useMemo } from \"react\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\nimport styles from \"./order-ready-status.module.css\";\r\n\r\nconst OrderReadyStatus: React.FC = () => {\r\n  const { messages } = useSelector((store) => store.ws);\r\n\r\n  const readyOrdersNumber = useMemo(\r\n    () => messages && messages.filter((item) => item.status === \"done\"),\r\n    [messages]\r\n  );\r\n\r\n  const progressOrdersNumber = useMemo(\r\n    () => messages && messages.filter((item) => item.status === \"pending\"),\r\n    [messages]\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.orders_status_block_wrapper}>\r\n        <p className=\"text text_type_main-medium mb-6\">Готовы:</p>\r\n        <ul className={styles.orders_status_block}>\r\n          {!!readyOrdersNumber?.length ? (\r\n            readyOrdersNumber.map((item, index) => (\r\n              <li key={index}>\r\n                <p className=\"text text_type_main-small\">{item.number}</p>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p className=\"text text_type_main-default\">Нет готовых заказов</p>\r\n          )}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className={styles.orders_status_block_wrapper}>\r\n        <p className=\"text text_type_main-medium mb-6\">В работе:</p>\r\n        <ul className={styles.orders_status_block}>\r\n          {!!progressOrdersNumber?.length ? (\r\n            progressOrdersNumber.map((item, index) => (\r\n              <li key={index}>\r\n                <p className=\"text text_type_main-small\">{item.number}</p>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <p className=\"text text_type_main-default\">Нет заказов в работе</p>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderReadyStatus;\r\n","import styles from \"./order-counter.module.css\";\r\n\r\ninterface OrdersCounterProps {\r\n  title: string;\r\n  count: number;\r\n}\r\n\r\nconst OrdersCounter: React.FC<OrdersCounterProps> = ({ title, count }) => {\r\n  return (\r\n    <div className=\"mt-15\">\r\n      <p className=\"text text_type_main-medium\">{title}</p>\r\n      <p className={`text text_type_digits-large ${styles.count}`}>{count}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersCounter;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\n// ---------- LOCAL ----------\r\nimport OrderPanel from \"../../components/order-panel/order-panel\";\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_CLOSED,\r\n  Sockets,\r\n} from \"../../redux/actions/wsActions\";\r\nimport styles from \"./feed.module.css\";\r\nimport OrderReadyStatus from \"../../components/order-ready-status/order-ready-status\";\r\nimport OrdersCounter from \"../../components/orders-counter/orders-counter\";\r\nimport { OrdersCounterTypes } from \"../../constants/constants\";\r\n\r\nconst FeedPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { messages, total, totalToday } = useSelector((store) => store.ws);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: WS_CONNECTION_START,\r\n      url: \"wss://norma.nomoreparties.space/orders/all\",\r\n      connection: Sockets.AllOrders,\r\n    });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <p className=\"text text_type_main-large mt-10 mb-5\">Лента заказов</p>\r\n      <div className={styles.content_container}>\r\n        {messages && (\r\n          <div className={styles.ingredients_wrapper}>\r\n            {messages.map((item, index) => (\r\n              <OrderPanel order={item} key={index} wsType={Sockets.AllOrders} />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className={`ml-15`} style={{ width: \"50%\" }}>\r\n          <OrderReadyStatus />\r\n          <OrdersCounter title={OrdersCounterTypes.total} count={total ?? 0} />\r\n          <OrdersCounter\r\n            title={OrdersCounterTypes.totalToday}\r\n            count={totalToday ?? 0}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"../../redux/hooks\";\r\nimport PropTypes from \"prop-types\";\r\nimport Preloader from \"../preloader/preloader\";\r\n// ---------- TYPES ----------\r\nimport { FC } from \"react\";\r\n\r\ninterface IProtectedRoute {\r\n  children: React.ReactNode;\r\n  path: string;\r\n  exact?: boolean;\r\n}\r\n\r\nconst ProtectedRoute: FC<IProtectedRoute> = ({ children, ...rest }) => {\r\n  const { user, isLoading } = useSelector((store) => store.auth);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <Route\r\n          {...rest}\r\n          render={({ location }) =>\r\n            user ? (\r\n              children\r\n            ) : (\r\n              <Redirect\r\n                to={{ pathname: \"/login\", state: { from: location } }}\r\n              />\r\n            )\r\n          }\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { GET_INGREDIENTS_URL } from '../../constants/constants';\r\nimport { IIngredient } from '../../types/common';\r\nimport { checkResponse } from '../../utils/js-utils';\r\nimport { AppDispatch } from '../types/index';\r\n\r\n// --------------- Получение ингридиентов от API ---------------\r\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_ERROR' = 'GET_INGREDIENTS_ERROR';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\n\r\nexport const SET_INGREDIENT_MODAL_DATA: 'SET_INGREDIENT_MODAL_DATA' = 'SET_INGREDIENT_MODAL_DATA';\r\nexport const DELETE_INGREDIENT_MODAL_DATA: 'DELETE_INGREDIENT_MODAL_DATA' = 'DELETE_INGREDIENT_MODAL_DATA';\r\n\r\nexport interface IGetIngredientsRequestAction {\r\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\n\r\nexport interface IGetIngredientsFailedAction {\r\n  readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\n\r\nexport interface IGetIngredientsSuccessAction {\r\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n  readonly ingredientsData: Array<IIngredient>\r\n}\r\n\r\nexport interface ISetIngredientModalDataAction {\r\n  readonly type: typeof SET_INGREDIENT_MODAL_DATA;\r\n  readonly id?: string;\r\n}\r\n\r\nexport interface IDeleteIngredientModalDataAction {\r\n  readonly type: typeof DELETE_INGREDIENT_MODAL_DATA;\r\n}\r\n\r\nexport const getIngredients = () => {\r\n  return function(dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_INGREDIENTS_REQUEST,\r\n    })\r\n\r\n    fetch(GET_INGREDIENTS_URL)\r\n      .then(checkResponse)\r\n      .then(result => {\r\n        dispatch({ \r\n          type: GET_INGREDIENTS_SUCCESS,\r\n          ingredientsData: result.data,\r\n        })\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: GET_INGREDIENTS_FAILED,})\r\n      })\r\n  }\r\n}\r\n\r\nexport type TIngredientsActions = \r\n| IGetIngredientsRequestAction\r\n| IGetIngredientsFailedAction\r\n| IGetIngredientsSuccessAction\r\n| ISetIngredientModalDataAction\r\n| IDeleteIngredientModalDataAction\r\n","import { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\n// ---------- LOCAL ----------\r\nimport styles from \"../ingredient-details/ingredient-details.module.css\";\r\nimport { SET_INGREDIENT_MODAL_DATA } from \"../../redux/actions/ingredients\";\r\n\r\ninterface IIngredientDetails {\r\n  type?: string;\r\n}\r\n\r\ninterface IMatchParams {\r\n  ingredientId?: string;\r\n}\r\n\r\nconst IngredientDetails = ({ type }: IIngredientDetails) => {\r\n  const { allIngredients, currentViewIngredient } = useSelector(\r\n    (store) => store.ingredients\r\n  );\r\n  const match = useRouteMatch<IMatchParams>();\r\n  const dispatch = useDispatch();\r\n\r\n  const ingredientId = useMemo(() => {\r\n    return match.params.ingredientId;\r\n  }, [match]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_INGREDIENT_MODAL_DATA, id: ingredientId });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allIngredients]);\r\n\r\n  return (\r\n    <>\r\n      {currentViewIngredient && (\r\n        <div\r\n          className={`${styles.ingredient_container} ${\r\n            type ? styles.ingredient_single_container : \"\"\r\n          }`}\r\n        >\r\n          <p\r\n            className={`text text_type_main-large ${!type ? \"ml-10\" : \"\"} ${\r\n              type ? styles.single_heading : \"\"\r\n            }`}\r\n          >\r\n            Детали ингредиента\r\n          </p>\r\n          <div className={`${styles.content_block} ml-25 mr-25 mb-15`}>\r\n            <img\r\n              src={currentViewIngredient.image_large}\r\n              alt={currentViewIngredient.name}\r\n            />\r\n            <p\r\n              className={`${styles.ingredient_name} text text_type_main-medium mt-4`}\r\n            >\r\n              {currentViewIngredient.name}\r\n            </p>\r\n\r\n            <div className={`${styles.info} mt-8`}>\r\n              <div className={styles.info_block}>\r\n                <p className=\"text text_type_main-default\">Каллории,ккал</p>\r\n                <p className=\"text text_type_main-default\">\r\n                  {currentViewIngredient.calories}\r\n                </p>\r\n              </div>\r\n              <div className={styles.info_block}>\r\n                <p className=\"text text_type_main-default\">Белки, г</p>\r\n                <p className=\"text text_type_main-default\">\r\n                  {currentViewIngredient.proteins}\r\n                </p>\r\n              </div>\r\n              <div className={styles.info_block}>\r\n                <p className=\"text text_type_main-default\">Жиры, г</p>\r\n                <p className=\"text text_type_main-default\">\r\n                  {currentViewIngredient.fat}\r\n                </p>\r\n              </div>\r\n              <div className={styles.info_block}>\r\n                <p className=\"text text_type_main-default\">Углеводы, г</p>\r\n                <p className=\"text text_type_main-default\">\r\n                  {currentViewIngredient.carbohydrates}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","import styles from './not-found.module.css'\r\n\r\nconst NotFoundPage = () => {\r\n  \r\n  return (\r\n    <p className={`text text_type_main-large ${styles.error_text}`}>Упс..кажется такой страницы не существует :(</p>\r\n  )\r\n}\r\n\r\nexport default NotFoundPage;","import { useSelector } from \"../../redux/hooks\";\r\nimport { useEffect, useState } from \"react\";\r\nimport IngredientLogo from \"../ingredient-logo/ingredient-logo\";\r\nimport styles from \"../order-ingredient-info/order-ingredient-info.module.css\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\ninterface OrderIngredientInfoProps {\r\n  ingredients: string[];\r\n}\r\n\r\nconst OrderIngredientInfo: React.FC<OrderIngredientInfoProps> = ({\r\n  ingredients,\r\n}) => {\r\n  const [currentOrder, setCurrentOrder] = useState<any[]>();\r\n  const { allIngredients } = useSelector((store) => store.ingredients);\r\n\r\n  const uniqueArray = (arr: string[]) => {\r\n    let result: string[] = [];\r\n    for (let i of arr) {\r\n      if (!result.includes(i)) {\r\n        result.push(i);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const arr = uniqueArray(ingredients);\r\n    const order = arr.map((id) => {\r\n      const countIng = ingredients.filter((item) => item === id).length;\r\n      const ingredient = allIngredients!.find((item) => item._id === id);\r\n      const currentIngredient = { ...ingredient, count: countIng };\r\n      return currentIngredient;\r\n    });\r\n\r\n    setCurrentOrder(order);\r\n  }, [allIngredients, ingredients]);\r\n\r\n  return (\r\n    <div className={styles.ingredients_wrapper}>\r\n      {currentOrder &&\r\n        currentOrder.map((item, index) => (\r\n          <div key={index} className={`mb-4 mr-4 ${styles.ingredient_wrapper}`}>\r\n            <IngredientLogo ingredient={item._id} />\r\n            <div className={`ml-6 ${styles.name_block}`}>\r\n              <p className=\"text text_type_main-default\">{item.name}</p>\r\n            </div>\r\n\r\n            <div className={styles.price_block}>\r\n              <p className={`ml-6 mr-2 text text_type_digits-default`}>\r\n                {item.count} x {item.price}\r\n              </p>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderIngredientInfo;\r\n","import { useEffect, useMemo } from \"react\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { dateConverter, priceCounter } from \"../../utils/js-utils\";\r\nimport OrderIngredientInfo from \"../order-ingredient-info/order-ingredient-info\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from \"../order-information/order-information.module.css\";\r\nimport { getOrderStatusName } from \"../../utils/js-utils\";\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_CLOSED,\r\n  Sockets,\r\n} from \"../../redux/actions/wsActions\";\r\n\r\ninterface IMatchParams {\r\n  orderId?: string;\r\n}\r\n\r\ninterface OrderInformationProps {\r\n  type?: string;\r\n  wsType?: string;\r\n}\r\n\r\nconst OrderInformation: React.FC<OrderInformationProps> = ({\r\n  type,\r\n  wsType,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { messages } = useSelector((store) => store.ws);\r\n  const { allIngredients } = useSelector((store) => store.ingredients);\r\n\r\n  useEffect(() => {\r\n    if (type === \"single\" && wsType) {\r\n      dispatch({\r\n        type: WS_CONNECTION_START,\r\n        url:\r\n          wsType === Sockets.AllOrders\r\n            ? \"wss://norma.nomoreparties.space/orders/all\"\r\n            : wsType === Sockets.UserOrders\r\n            ? \"wss://norma.nomoreparties.space/orders\"\r\n            : \"\",\r\n        connection: wsType,\r\n      });\r\n      return () => {\r\n        dispatch({ type: WS_CONNECTION_CLOSED });\r\n      };\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const match = useRouteMatch<IMatchParams>();\r\n\r\n  const orderId = useMemo(() => {\r\n    return match.params.orderId;\r\n  }, [match]);\r\n\r\n  const currentOrder = useMemo(() => {\r\n    return messages && messages.find((item) => item._id === orderId);\r\n  }, [orderId, messages]);\r\n\r\n  const price = useMemo(\r\n    () =>\r\n      allIngredients &&\r\n      currentOrder &&\r\n      priceCounter(currentOrder.ingredients, allIngredients),\r\n    [allIngredients, currentOrder]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {currentOrder && (\r\n        <div\r\n          className={\r\n            type === \"single\" ? styles.single_container : styles.container\r\n          }\r\n        >\r\n          <p\r\n            className={`text text_type_digits-default ${\r\n              type === \"single\" ? styles.number_block : \"\"\r\n            }`}\r\n          >\r\n            #{currentOrder.number}\r\n          </p>\r\n          <p className=\"text text_type_main-medium mt-10\">\r\n            {currentOrder.name}\r\n          </p>\r\n          <p\r\n            className=\"text text_type_main-default mt-3\"\r\n            style={{ color: \"#00CCCC\" }}\r\n          >\r\n            {getOrderStatusName(currentOrder.status)}\r\n          </p>\r\n          <div className=\"mt-15 mb-6\">\r\n            <p className=\"text text_type_main-medium\">Состав:</p>\r\n          </div>\r\n\r\n          <OrderIngredientInfo ingredients={currentOrder.ingredients} />\r\n\r\n          <div className={`mt-6 ${styles.bottom_block}`}>\r\n            <p className=\"text text_type_main-default text_color_inactive\">\r\n              {dateConverter(currentOrder.createdAt)}\r\n            </p>\r\n            <div className={styles.price_block}>\r\n              <p className={`mr-2  text text_type_digits-default`}>{price}</p>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderInformation;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../redux/hooks\";\r\nimport { FC, useEffect } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n// ---------- LOCAL ----------\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport MainPage from \"../../pages/main/main\";\r\nimport LoginPage from \"../../pages/login/login\";\r\nimport RegisterPage from \"../../pages/register/register\";\r\nimport ForgotPasswordPage from \"../../pages/forgot-password/forgot-password\";\r\nimport ResetPasswordPage from \"../../pages/reset-password/reset-password\";\r\nimport ProfilePage from \"../../pages/profile/profile\";\r\nimport FeedPage from \"../../pages/feed/feed\";\r\nimport ProtectedRoute from \"../protected-route/protected-route\";\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientsDetails from \"../ingredient-details/ingredient-details\";\r\nimport { DELETE_INGREDIENT_MODAL_DATA } from \"../../redux/actions/ingredients\";\r\nimport { getIngredients } from \"../../redux/actions/ingredients\";\r\nimport { getUser } from \"../../redux/actions/auth\";\r\nimport NotFoundPage from \"../../pages/not-found/not-found\";\r\nimport OrderInformation from \"../order-information/order-information\";\r\nimport { Sockets } from \"../../redux/actions/wsActions\";\r\ninterface LocationElement {\r\n  hash: string;\r\n  key: string;\r\n  pathname: string;\r\n  search: string;\r\n  state: any;\r\n}\r\n\r\ninterface LocationState {\r\n  background?: undefined | LocationElement;\r\n  location?: undefined | LocationElement;\r\n}\r\n\r\nconst App: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((store) => store.auth);\r\n\r\n  useEffect(() => {\r\n    dispatch(getIngredients());\r\n    if (!user && !!localStorage.getItem(\"accessToken\")) {\r\n      dispatch(getUser());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const ModalSwitch = () => {\r\n    const location = useLocation<LocationState>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const background = location.state && location.state.background;\r\n\r\n    const handleModalClose = () => {\r\n      dispatch({ type: DELETE_INGREDIENT_MODAL_DATA });\r\n      history.goBack();\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <AppHeader />\r\n        <Switch location={background || location}>\r\n          <Route path=\"/\" exact>\r\n            <MainPage />\r\n          </Route>\r\n\r\n          <Route path=\"/ingredients/:ingredientId\" exact>\r\n            <IngredientsDetails type=\"single\" />\r\n          </Route>\r\n\r\n          <Route path=\"/login\" exact>\r\n            <LoginPage />\r\n          </Route>\r\n\r\n          <Route path=\"/register\" exact>\r\n            <RegisterPage />\r\n          </Route>\r\n\r\n          <Route path=\"/forgot-password\" exact>\r\n            <ForgotPasswordPage />\r\n          </Route>\r\n\r\n          <Route path=\"/reset-password\" exact>\r\n            <ResetPasswordPage />\r\n          </Route>\r\n\r\n          <ProtectedRoute path=\"/profile\" exact>\r\n            <ProfilePage type=\"profile\" />\r\n          </ProtectedRoute>\r\n\r\n          <ProtectedRoute path=\"/profile/orders\" exact>\r\n            <ProfilePage type=\"history\" />\r\n          </ProtectedRoute>\r\n\r\n          <ProtectedRoute path=\"/profile/orders/:orderId\" exact>\r\n            <OrderInformation type=\"single\" wsType={Sockets.UserOrders} />\r\n          </ProtectedRoute>\r\n\r\n          <Route path=\"/feed\" exact>\r\n            <FeedPage />\r\n          </Route>\r\n\r\n          <Route path=\"/feed/:orderId\" exact>\r\n            <OrderInformation type=\"single\" wsType={Sockets.AllOrders} />\r\n          </Route>\r\n\r\n          <Route>\r\n            <NotFoundPage />\r\n          </Route>\r\n        </Switch>\r\n\r\n        {background && (\r\n          <Route\r\n            path=\"/ingredients/:ingredientId\"\r\n            children={\r\n              <Modal onClick={handleModalClose}>\r\n                <IngredientsDetails />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n\r\n        {background && background.pathname.includes(\"feed\") && (\r\n          <Route\r\n            path=\"/feed/:orderId\"\r\n            children={\r\n              <Modal onClick={handleModalClose}>\r\n                <OrderInformation />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n\r\n        {background && background.pathname.includes(\"profile/orders\") && (\r\n          <Route\r\n            path=\"/profile/orders/:orderId\"\r\n            children={\r\n              <Modal onClick={handleModalClose}>\r\n                <OrderInformation />\r\n              </Modal>\r\n            }\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <ModalSwitch />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { \r\n  GET_INGREDIENTS_REQUEST, \r\n  GET_INGREDIENTS_SUCCESS, \r\n  GET_INGREDIENTS_FAILED, \r\n  SET_INGREDIENT_MODAL_DATA,\r\n  DELETE_INGREDIENT_MODAL_DATA,\r\n} from '../actions/ingredients';\r\n\r\nimport { IIngredient } from '../../types/common';\r\nimport { TIngredientsActions } from '../actions/ingredients';\r\n\r\nexport type TIngredientsState = {\r\n  ingRequest: boolean;\r\n  ingError: boolean;\r\n  allIngredients: Array<IIngredient> | null;\r\n  currentViewIngredient: IIngredient | null | undefined ;\r\n}\r\n\r\nconst initialState: TIngredientsState = {\r\n  ingRequest: false,\r\n  ingError: false,\r\n  allIngredients: null,\r\n  currentViewIngredient: null,\r\n}\r\n\r\nexport const ingredientReducer = (state = initialState, action: TIngredientsActions): TIngredientsState => {\r\n  switch(action.type) {\r\n    case GET_INGREDIENTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        ingRequest: true,\r\n        ingError: false,\r\n      }\r\n    case GET_INGREDIENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        ingRequest: false,\r\n        ingError: true,\r\n      }\r\n    case GET_INGREDIENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ingRequest: false,\r\n        ingError: false,\r\n        allIngredients: action.ingredientsData\r\n      }\r\n    case SET_INGREDIENT_MODAL_DATA:\r\n      return {\r\n        ...state, \r\n        currentViewIngredient: state.allIngredients ? state.allIngredients.find(el => el._id === action.id) : null\r\n      }\r\n    case DELETE_INGREDIENT_MODAL_DATA: {\r\n      return {\r\n        ...state,\r\n        currentViewIngredient: null\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import { \r\n  ADD_INGREDIENT_INTO_ORDER,\r\n  DELETE_INGREDIENT_FROM_ORDER,\r\n  UPDATE_ORDER_AFTER_DROP,\r\n  CLEAR_ORDER\r\n} from '../actions/orderConstructor';\r\nimport { IIngredient } from '../../types/common';\r\nimport { TOrderConstructorActions } from '../actions/orderConstructor';\r\n\r\ntype TOrderConstructorState = {\r\n  currentOrderBun: IIngredient | null;\r\n  currentOrderIngredients: Array<IIngredient> | null ;\r\n}\r\n\r\nconst initialState: TOrderConstructorState = {\r\n  currentOrderBun: null,\r\n  currentOrderIngredients: null,\r\n}\r\n\r\nexport const orderConstructorReducer = (state = initialState, action: TOrderConstructorActions): TOrderConstructorState => {\r\n  switch(action.type) {\r\n    case ADD_INGREDIENT_INTO_ORDER: {\r\n      if (action.ingType === 'bun') {\r\n        return {\r\n          ...state,\r\n          currentOrderBun: action.data,\r\n        }\r\n      } else return {\r\n        ...state,\r\n        currentOrderIngredients: state.currentOrderIngredients ? [...state.currentOrderIngredients, action.data] : [ action.data ], \r\n      }\r\n    }\r\n    case DELETE_INGREDIENT_FROM_ORDER: {\r\n      return {\r\n        ...state,\r\n        currentOrderIngredients: state.currentOrderIngredients && state.currentOrderIngredients.filter(item => item.id !== action.ingId)\r\n      }\r\n    }\r\n    case UPDATE_ORDER_AFTER_DROP: {\r\n      return {\r\n        ...state, \r\n        currentOrderIngredients: action.data\r\n      }\r\n    }\r\n    case CLEAR_ORDER: {\r\n      return {\r\n        ...state, \r\n        currentOrderBun: null,\r\n        currentOrderIngredients: null,\r\n      }\r\n    }\r\n    default: return { ...state }\r\n  }\r\n}","import { \r\n  GET_ORDER_NUMBER_REQUEST, \r\n  GET_ORDER_NUMBER_SUCCESS,\r\n  GET_ORDER_NUMBER_FAILED,\r\n  CLEAR_ORDER_NUMBER\r\n} from '../actions/makingOrder';\r\nimport { TMakingOrderAction } from '../actions/makingOrder';\r\n\r\ntype TMakingOrderState = {\r\n  getOrderRequest: boolean;\r\n  getOrderFailed: boolean;\r\n  orderNumber: string | number,\r\n}\r\n\r\nconst initialState: TMakingOrderState = {\r\n  getOrderRequest: false,\r\n  getOrderFailed: false,\r\n  orderNumber: '',\r\n}\r\n\r\nexport const makingOrderReducer = (state = initialState, action: TMakingOrderAction): TMakingOrderState => {\r\n\r\n  switch(action.type) {\r\n    case GET_ORDER_NUMBER_REQUEST:\r\n      return {\r\n        ...state, \r\n        getOrderRequest: true,\r\n      }\r\n    case GET_ORDER_NUMBER_FAILED: {\r\n      return {\r\n        ...state,\r\n        getOrderFailed: true,\r\n        getOrderRequest: false,\r\n      }\r\n    }\r\n    case GET_ORDER_NUMBER_SUCCESS:\r\n      return {\r\n        ...state, \r\n        orderNumber: action.data.order.number,\r\n        getOrderRequest: false,\r\n      }\r\n    case CLEAR_ORDER_NUMBER: {\r\n      return {\r\n        ...state, \r\n        orderNumber: '',\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import {  FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_ERROR, \r\n          RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_ERROR,\r\n        } from '../actions/forgotPassword';\r\n\r\nimport { TForgotPasswordActions } from '../actions/forgotPassword';\r\n\r\ntype TForgotPasswordState = {\r\n  forgotPasswordRequest: boolean;\r\n  forgotPasswordStatus: boolean;\r\n  forgotPasswordError: boolean;\r\n\r\n  resetPasswordRequest: boolean;\r\n  resetPasswordStatus: boolean;\r\n  resetPasswordError: boolean;\r\n\r\n  recoveryStage: 1 | null,\r\n}\r\n\r\nconst initialState: TForgotPasswordState = {\r\n  forgotPasswordRequest: false,\r\n  forgotPasswordStatus: false,\r\n  forgotPasswordError: false,\r\n\r\n  resetPasswordRequest: false,\r\n  resetPasswordStatus: false,\r\n  resetPasswordError: false,\r\n\r\n  recoveryStage: null,\r\n}\r\n\r\nexport const forgotPasswordReducer = (state = initialState, action: TForgotPasswordActions): TForgotPasswordState => {\r\n  switch (action.type) {\r\n    // Блок FORGOT PASSWORD\r\n    case FORGOT_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: true,\r\n      }\r\n    case FORGOT_PASSWORD_ERROR:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordStatus: false,\r\n        forgotPasswordError: true,\r\n      }\r\n    case FORGOT_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordStatus: true,\r\n        recoveryStage: 1,\r\n      }\r\n    // Блок RESET PASSWORD\r\n    case RESET_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: true,\r\n      }\r\n    case RESET_PASSWORD_ERROR:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        resetPasswordStatus: false,\r\n        resetPasswordError: true,\r\n      }\r\n    case RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequest: false,\r\n        resetPasswordStatus: true,\r\n      }\r\n    default: return state;\r\n  }\r\n}","import {  REGISTRATION_REQUEST, REGISTRATION_SUCCESS, REGISTRATION_ERROR,\r\n          AUTH_REQUEST, AUTH_SUCCESS, AUTH_ERROR,\r\n          REFRESH_TOKEN_REQUEST, REFRESH_TOKEN_SUCCESS, REFRESH_TOKEN_ERROR,\r\n          GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_ERROR,\r\n          PATCH_USER_REQUEST, PATCH_USER_SUCCESS, PATCH_USER_ERROR, IS_DATA_USER_UPDATED,\r\n          LOGOUT_SUCCESS, LOGOUT_ERROR, LOGOUT_REQUEST\r\n} from '../actions/auth';\r\nimport { TAuthActions } from '../actions/auth';\r\nimport { IUserRegistrationData } from '../../types/common';\r\n\r\ntype TAuthState = {\r\n  isLoading: boolean;\r\n  registrationRequest: boolean;\r\n  registrationError: boolean;\r\n  authRequest: boolean;\r\n  authError: boolean;\r\n  refreshTokenRequest: boolean;\r\n  refreshTokenError: boolean;\r\n  getUserRequest: boolean;\r\n  getUserError: boolean;\r\n  patchUserRequest: boolean;\r\n  patchUserError: boolean;\r\n  isUserDataUpdated: boolean;\r\n  logoutRequest: boolean;\r\n  logoutError: boolean;\r\n  user: IUserRegistrationData | null;\r\n  accessToken: string | null;\r\n  refreshToken: string | null;\r\n}\r\n\r\nconst initialState: TAuthState = {\r\n  isLoading: true,\r\n  registrationRequest: false,\r\n  registrationError: false,\r\n\r\n  authRequest: false,\r\n  authError: false,\r\n\r\n  refreshTokenRequest: false,\r\n  refreshTokenError: false,\r\n\r\n  getUserRequest: false,\r\n  getUserError: false,\r\n\r\n  patchUserRequest: false,\r\n  patchUserError: false,\r\n  isUserDataUpdated: false,\r\n\r\n  logoutRequest: false,\r\n  logoutError: false,\r\n\r\n  user: null,\r\n  accessToken: null,\r\n  refreshToken: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: TAuthActions): TAuthState => {\r\n  switch (action.type) {\r\n    // ----- Регистрация -----\r\n    case REGISTRATION_REQUEST: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: true,\r\n        registrationError: false,\r\n      }\r\n    }\r\n    case REGISTRATION_ERROR: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: false,\r\n        registrationError: false,\r\n      }\r\n    }\r\n    case REGISTRATION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        registrationRequest: false,\r\n        registrationError: false,\r\n        user: action.data.user,\r\n        accessToken: action.data.accessToken,\r\n        refreshToken: action.data.refreshToken,\r\n      }\r\n    }\r\n    // ----- Авторизация -----\r\n    case AUTH_REQUEST: {\r\n      return {\r\n        ...state,\r\n        authRequest: true,\r\n        authError: false,\r\n      }\r\n    }\r\n    case AUTH_ERROR: {\r\n      return {\r\n        ...state, \r\n        authRequest: false,\r\n        authError: true,\r\n      }\r\n    }\r\n    case AUTH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        authRequest: false,\r\n        authError: false,\r\n        user: action.data.user,\r\n        accessToken: action.data.accessToken,\r\n        refreshToken: action.data.refreshToken,\r\n        isLoading: false,\r\n      }\r\n    }\r\n    // ----- Рефреш токена -----\r\n    case REFRESH_TOKEN_REQUEST: {\r\n      return {\r\n        ...state, \r\n        refreshTokenRequest: true,\r\n      }\r\n    }\r\n    case REFRESH_TOKEN_ERROR: {\r\n      return {\r\n        ...state, \r\n        refreshTokenRequest: false,\r\n        refreshTokenError: true,\r\n      }\r\n    }\r\n    case REFRESH_TOKEN_SUCCESS: {\r\n      console.log('дошло')\r\n      return {\r\n        ...state, \r\n        refreshTokenRequest: false,\r\n        refreshTokenError: false,\r\n        refreshToken: action.data.refreshToken,\r\n        accessToken: action.data.accessToken,\r\n      }\r\n    }\r\n    // ----- Получение данных о пользователе\r\n    case GET_USER_REQUEST: {\r\n      return {\r\n        ...state, \r\n        getUserRequest: true,\r\n        getUserError: false,\r\n      }\r\n    }\r\n    case GET_USER_ERROR: {\r\n      return {\r\n        ...state, \r\n        getUserRequest: false,\r\n        getUserError: true,\r\n      }\r\n    }\r\n    case GET_USER_SUCCESS: {\r\n      return {\r\n        ...state, \r\n        getUserRequest: false,\r\n        getUserError: false,\r\n        user: action.data,\r\n        isLoading: false,\r\n      }\r\n    }\r\n    // ----- Редактирование данных о пользователе\r\n    case PATCH_USER_REQUEST: {\r\n      return {\r\n        ...state, \r\n        patchUserRequest: true,\r\n        patchUserError: false,\r\n      }\r\n    }\r\n    case PATCH_USER_ERROR: {\r\n      return {\r\n        ...state, \r\n        patchUserRequest: false,\r\n        patchUserError: true,\r\n      }\r\n    }\r\n    case PATCH_USER_SUCCESS: {\r\n      return {\r\n        ...state, \r\n        patchUserRequest: false,\r\n        patchUserError: false,\r\n        isUserDataUpdated: true,\r\n        user: action.data\r\n      }\r\n    }\r\n    case IS_DATA_USER_UPDATED: {\r\n      return {\r\n        ...state, \r\n        isUserDataUpdated: false\r\n      }\r\n    }\r\n    case LOGOUT_REQUEST: {\r\n      return {\r\n        ...state, \r\n        logoutRequest: true,\r\n        logoutError: false,\r\n      }\r\n    }\r\n    case LOGOUT_ERROR: {\r\n      return {\r\n        ...state, \r\n        logoutRequest: false,\r\n        logoutError: true,\r\n      }\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      return {\r\n        ...state, \r\n        logoutRequest: false,\r\n        logoutError: false,\r\n        user: null,\r\n        accessToken: null,\r\n        refreshToken: null,\r\n        isLoading: false,\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}","import { WS_CONNECTION_SUCCESS, WS_CONNECTION_CLOSED, WS_GET_MESSAGE, WS_CONNECTION_ERROR } from '../actions/wsActions';\r\nimport { TWsActionsUnionType } from '../actions/wsActions';\r\nimport { IOrder } from '../../types/common';\r\n\r\ntype TWsState = {\r\n  messages: IOrder[] | null;\r\n  isConnected: boolean;\r\n  isFailed: boolean;\r\n  total: number | null;\r\n  totalToday: number | null;\r\n  isFirstLoading: boolean;\r\n}\r\n\r\nconst initialState: TWsState = {\r\n  messages: null,\r\n  isConnected: false,\r\n  isFailed: false,\r\n  total: null,\r\n  totalToday: null,\r\n  isFirstLoading: false,\r\n}\r\n\r\nexport const wsReducer = (state = initialState, action: TWsActionsUnionType) => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isConnected: true,\r\n        isFailed: false\r\n      }\r\n    }\r\n    case WS_CONNECTION_CLOSED: {\r\n      return {\r\n        ...state, \r\n        isConnected: false,\r\n        isFailed: false,\r\n      }\r\n    }\r\n    case WS_CONNECTION_ERROR: {\r\n      return {\r\n        ...state, \r\n        isConnected: false,\r\n        isFailed: true,\r\n      }\r\n    }\r\n    case WS_GET_MESSAGE: {\r\n        return {\r\n          ...state,\r\n          messages: action.payload.orders,\r\n          total: action.payload.total,\r\n          totalToday: action.payload.totalToday,\r\n          isFirstLoading: !!state.messages\r\n        }\r\n\r\n    }\r\n    default: return { ...state }\r\n  }\r\n}\r\n","import { ingredientReducer } from \"./ingredients\";\r\nimport { orderConstructorReducer } from \"./orderConstructor\";\r\nimport { makingOrderReducer } from \"./makingOrder\";\r\nimport { forgotPasswordReducer } from \"./forgotPassword\";\r\nimport { authReducer } from \"./auth\";\r\nimport { wsReducer } from \"./wsReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredients: ingredientReducer,\r\n  order: orderConstructorReducer,\r\n  makingOrder: makingOrderReducer,\r\n  forgotPassword: forgotPasswordReducer,\r\n  auth: authReducer,\r\n  ws: wsReducer,\r\n});\r\n","import { Middleware, MiddlewareAPI } from 'redux';\r\nimport { Sockets, wsActionsType } from '../actions/wsActions';\r\nimport { AppDispatch, RootState } from '../types';\r\n\r\n\r\nexport const socketMiddleware = (wsActions: wsActionsType): Middleware => {\r\n  return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n      \r\n    return (next) => (action) => {\r\n      const { dispatch } = store;\r\n      let ws: WebSocket | null = null;\r\n\r\n      const { type, url, connection } = action\r\n      const { wsInit, onOpen, onClose, onMessage, onError } = wsActions\r\n\r\n      if ( type === wsInit) {\r\n        const token = localStorage.getItem('accessToken');\r\n        const WS_URL: string = connection === Sockets.AllOrders ? url : url + `?token=${token}`\r\n        ws = new WebSocket(WS_URL)\r\n      }\r\n\r\n      if (type === onClose) {\r\n        ws?.close();\r\n      }\r\n\r\n      if (ws) {\r\n        ws.onopen = () => dispatch({ type: onOpen })\r\n\r\n        ws.onclose = () => {\r\n          dispatch({ type: onClose })\r\n        }\r\n\r\n        ws.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          dispatch({ type: onMessage, payload: parsedData})\r\n        }\r\n\r\n        ws.onerror = () => {\r\n          dispatch({ type: onError })\r\n        }\r\n      }\r\n      next(action)\r\n    }\r\n \r\n  })\r\n}\r\n","import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../redux/reducers/index\";\r\nimport { socketMiddleware } from './middleware/socketMiddleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { WS_CONNECTION_START, WS_CONNECTION_SUCCESS, WS_CONNECTION_ERROR, WS_CONNECTION_CLOSED, WS_GET_MESSAGE} from \"./actions/wsActions\";\r\n\r\nexport const wsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_MESSAGE\r\n};\r\n\r\nexport const composeEnhancers =\r\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const initStore = (initialState = {}) =>\r\n  createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(composeEnhancers(applyMiddleware(thunkMiddleware, socketMiddleware(wsActions))))\r\n);\r\n","import ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n// LOCAL\r\nimport App from \"./components/app/app\";\r\nimport \"./index.css\";\r\nimport { initStore } from \"./redux/store\";\r\n\r\nconst store = initStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_nav_link\":\"profile_profile_nav_link__2Y_zL\",\"profile_nav_active_link\":\"profile_profile_nav_active_link__1j7ed\",\"nav_container\":\"profile_nav_container__3klNW\",\"profile_container\":\"profile_profile_container__tF_VR\",\"error_info\":\"profile_error_info___Rqwd\",\"ok_message_info\":\"profile_ok_message_info__2uqv7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_item\":\"ingredient-item_ingredient_item__29IRw\",\"image\":\"ingredient-item_image__1b6sD\",\"price\":\"ingredient-item_price__3KALI\",\"price_text\":\"ingredient-item_price_text__229-t\",\"name_text\":\"ingredient-item_name_text__1dEYy\",\"link\":\"ingredient-item_link__1DdAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_container\":\"burger-constructor_section_container__38fdE\",\"total\":\"burger-constructor_total__39tEC\",\"total_price\":\"burger-constructor_total_price__34sGz\",\"total_price_number\":\"burger-constructor_total_price_number__38yr9\",\"section_border\":\"burger-constructor_section_border__25Wl6\",\"section_border_before\":\"burger-constructor_section_border_before__3MguM\",\"ingredients_wrapper\":\"burger-constructor_ingredients_wrapper__1usIb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"login_login_container__21SvE\",\"form_block\":\"login_form_block__PE2Dc\",\"bottom_info\":\"login_bottom_info__30Z6R\",\"link\":\"login_link__vnRog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_block\":\"order-panel_order_block__1s27n\",\"number_date_block\":\"order-panel_number_date_block__2gBLc\",\"bottom_block\":\"order-panel_bottom_block__3XFdp\",\"ingredients_block\":\"order-panel_ingredients_block__Cgo9l\",\"image_block\":\"order-panel_image_block__3NU2b\",\"ingredient_image\":\"order-panel_ingredient_image__3Z_Ij\",\"rest_number\":\"order-panel_rest_number__2ANkF\",\"price_block\":\"order-panel_price_block__2kb_C\",\"link\":\"order-panel_link__3CfME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-ready-status_container__3g30C\",\"orders_status_block_wrapper\":\"order-ready-status_orders_status_block_wrapper__mVLN0\",\"orders_status_block\":\"order-ready-status_orders_status_block__3EbCe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"single_container\":\"order-information_single_container__1m5Ao\",\"container\":\"order-information_container__2UU1Y\",\"number_block\":\"order-information_number_block__2kgZK\",\"bottom_block\":\"order-information_bottom_block__2EV71\",\"price_block\":\"order-information_price_block__1ro13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"register_login_container__1inmf\",\"form_block\":\"register_form_block__zZ4CN\",\"bottom_info\":\"register_bottom_info__1Ps6b\",\"link\":\"register_link__25Wyb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"forgot-password_login_container__2F3J1\",\"form_block\":\"forgot-password_form_block__3uJ0E\",\"bottom_info\":\"forgot-password_bottom_info__23_T6\",\"link\":\"forgot-password_link__2VbmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"reset-password_login_container__1yt2E\",\"form_block\":\"reset-password_form_block__2W-7I\",\"bottom_info\":\"reset-password_bottom_info__2_PR6\",\"link\":\"reset-password_link__1jK23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image_block\":\"ingredient-logo_image_block__1qiKq\",\"image_block_position_absolute\":\"ingredient-logo_image_block_position_absolute__1JIM8\",\"ingredient_image\":\"ingredient-logo_ingredient_image__1qVyI\",\"rest_number\":\"ingredient-logo_rest_number__3I9-H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_wrapper\":\"order-ingredient-info_ingredient_wrapper__3tJVb\",\"name_block\":\"order-ingredient-info_name_block__3NBRW\",\"price_block\":\"order-ingredient-info_price_block__35BPV\",\"ingredients_wrapper\":\"order-ingredient-info_ingredients_wrapper__OVRZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_block\":\"order-details_content_block__15YuZ\",\"grey_text\":\"order-details_grey_text__1VImJ\",\"order_number\":\"order-details_order_number__1ZbO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_content\":\"modal_modal_content__1zW45\",\"close_icon\":\"modal_close_icon__1X951\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"main_main_container__3m2T1\",\"ingredients_block\":\"main_ingredients_block__21ihO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_nav_link\":\"profile-user-block_profile_nav_link__dRWn9\",\"profile_nav_active_link\":\"profile-user-block_profile_nav_active_link__nwa18\",\"nav_container\":\"profile-user-block_nav_container__yjvg_\",\"profile_container\":\"profile-user-block_profile_container__2874U\",\"error_info\":\"profile-user-block_error_info__1Ja2f\",\"ok_message_info\":\"profile-user-block_ok_message_info__1mibv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders_container\":\"order-history_orders_container__Msh97\",\"ingredients_wrapper\":\"order-history_ingredients_wrapper__2EVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_container\":\"feed_content_container__OCB57\",\"ingredients_wrapper\":\"feed_ingredients_wrapper__3Lx6Z\"};"],"sourceRoot":""}